{"version":3,"sources":["js/tonal/extensions/detect/node_modules/tonal-note/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-interval/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-dictionary/node_modules/tonal-array/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-dictionary/node_modules/tonal-pcset/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-dictionary/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-array/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-pcset/build/es6.js","js/tonal/extensions/detect/index.js"],"names":["NAMES","split","names","accTypes","slice","filter","n","acc","indexOf","SHARPS","FLATS","REGEX","tokenize","str","m","exec","toUpperCase","replace","NO_NOTE","Object","freeze","pc","name","step","alt","oct","octStr","chroma","midi","freq","SEMI","properties","tokens","letter","p","charCodeAt","length","midiToFreq","memo","fn","cache","props","isMidiRange","note","value","tuning","Math","pow","L2","log","L440","freqToMidi","v","round","LETTERS","stepToLetter","fillStr","s","Array","join","numToStr","num","op","altToAcc","from","fromProps","baseNote","_a","assign","build","fromMidi","sharps","pcs","o","floor","simplify","sameAcc","alteration","useSharps","enharmonic","IVL_TNL","IVL_STR","RegExp","SIZES","TYPES","CLASSES","types","NO_IVL","q","dir","type","simple","semitones","abs","qToAlt","test","altToQ","numToStep","t","ic","ivl","_b","_c","undefined","d","intervalProps","invert","IN","IQ","fromSemitones","c","ascR","b","a","descR","range","rotate","times","arr","len","concat","compact","height","sort","src","map","unique","i","shuffle","rnd","random","permutations","reduce","perm","e","pos","newPerm","splice","chr","pcsetNum","set","parseInt","clen","isChroma","isArray","forEach","all","chromas","toString","modes","normalize","binary","_","r","IVLS","intervals","isEqual","s1","s2","arguments","isSubsetOf","notes","isSupersetOf","includes","dictionary","raw","keys","data","index","add","ivls","push","key","alias","allKeys","dict","combine","scale","sdata","chord","cdata","pcset","detector","defaultBuilder","tonic","builder","mode","x","Dictionary"],"mappings":"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","file":"detect.fd0b0d41.map","sourceRoot":"..","sourcesContent":["var NAMES = \"C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B\".split(\" \");\r\nvar names = function (accTypes) {\r\n    return typeof accTypes !== \"string\"\r\n        ? NAMES.slice()\r\n        : NAMES.filter(function (n) {\r\n            var acc = n[1] || \" \";\r\n            return accTypes.indexOf(acc) !== -1;\r\n        });\r\n};\r\nvar SHARPS = names(\" #\");\r\nvar FLATS = names(\" b\");\r\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\r\nfunction tokenize(str) {\r\n    if (typeof str !== \"string\")\r\n        str = \"\";\r\n    var m = REGEX.exec(str);\r\n    return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\r\n}\r\nvar NO_NOTE = Object.freeze({\r\n    pc: null,\r\n    name: null,\r\n    step: null,\r\n    alt: null,\r\n    oct: null,\r\n    octStr: null,\r\n    chroma: null,\r\n    midi: null,\r\n    freq: null\r\n});\r\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\r\nvar properties = function (str) {\r\n    var tokens = tokenize(str);\r\n    if (tokens[0] === \"\" || tokens[3] !== \"\")\r\n        return NO_NOTE;\r\n    var letter = tokens[0], acc = tokens[1], octStr = tokens[2];\r\n    var p = {\r\n        letter: letter,\r\n        acc: acc,\r\n        octStr: octStr,\r\n        pc: letter + acc,\r\n        name: letter + acc + octStr,\r\n        step: (letter.charCodeAt(0) + 3) % 7,\r\n        alt: acc[0] === \"b\" ? -acc.length : acc.length,\r\n        oct: octStr.length ? +octStr : null,\r\n        chroma: 0,\r\n        midi: null,\r\n        freq: null\r\n    };\r\n    p.chroma = (SEMI[p.step] + p.alt + 120) % 12;\r\n    p.midi = p.oct !== null ? SEMI[p.step] + p.alt + 12 * (p.oct + 1) : null;\r\n    p.freq = midiToFreq(p.midi);\r\n    return Object.freeze(p);\r\n};\r\nvar memo = function (fn, cache) {\r\n    if (cache === void 0) { cache = {}; }\r\n    return function (str) { return cache[str] || (cache[str] = fn(str)); };\r\n};\r\nvar props = memo(properties);\r\nvar name = function (str) { return props(str).name; };\r\nvar pc = function (str) { return props(str).pc; };\r\nvar isMidiRange = function (m) { return m >= 0 && m <= 127; };\r\nvar midi = function (note) {\r\n    if (typeof note !== \"number\" && typeof note !== \"string\") {\r\n        return null;\r\n    }\r\n    var midi = props(note).midi;\r\n    var value = midi || midi === 0 ? midi : +note;\r\n    return isMidiRange(value) ? value : null;\r\n};\r\nvar midiToFreq = function (midi, tuning) {\r\n    if (tuning === void 0) { tuning = 440; }\r\n    return typeof midi === \"number\" ? Math.pow(2, (midi - 69) / 12) * tuning : null;\r\n};\r\nvar freq = function (note) { return props(note).freq || midiToFreq(note); };\r\nvar L2 = Math.log(2);\r\nvar L440 = Math.log(440);\r\nvar freqToMidi = function (freq) {\r\n    var v = (12 * (Math.log(freq) - L440)) / L2 + 69;\r\n    return Math.round(v * 100) / 100;\r\n};\r\nvar chroma = function (str) { return props(str).chroma; };\r\nvar oct = function (str) { return props(str).oct; };\r\nvar LETTERS = \"CDEFGAB\";\r\nvar stepToLetter = function (step) { return LETTERS[step]; };\r\nvar fillStr = function (s, n) { return Array(n + 1).join(s); };\r\nvar numToStr = function (num, op) {\r\n    return typeof num !== \"number\" ? \"\" : op(num);\r\n};\r\nvar altToAcc = function (alt) {\r\n    return numToStr(alt, function (alt) { return (alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt)); });\r\n};\r\nvar from = function (fromProps, baseNote) {\r\n    if (fromProps === void 0) { fromProps = {}; }\r\n    if (baseNote === void 0) { baseNote = null; }\r\n    var _a = baseNote\r\n        ? Object.assign({}, props(baseNote), fromProps)\r\n        : fromProps, step = _a.step, alt = _a.alt, oct = _a.oct;\r\n    if (typeof step !== \"number\")\r\n        return null;\r\n    var letter = stepToLetter(step);\r\n    if (!letter)\r\n        return null;\r\n    var pc = letter + altToAcc(alt);\r\n    return oct || oct === 0 ? pc + oct : pc;\r\n};\r\nvar build = from;\r\nfunction fromMidi(num, sharps) {\r\n    if (sharps === void 0) { sharps = false; }\r\n    num = Math.round(num);\r\n    var pcs = sharps === true ? SHARPS : FLATS;\r\n    var pc = pcs[num % 12];\r\n    var o = Math.floor(num / 12) - 1;\r\n    return pc + o;\r\n}\r\nvar simplify = function (note, sameAcc) {\r\n    if (sameAcc === void 0) { sameAcc = true; }\r\n    var _a = props(note), alt = _a.alt, chroma = _a.chroma, midi = _a.midi;\r\n    if (chroma === null)\r\n        return null;\r\n    var alteration = alt;\r\n    var useSharps = sameAcc === false ? alteration < 0 : alteration > 0;\r\n    return midi === null\r\n        ? pc(fromMidi(chroma, useSharps))\r\n        : fromMidi(midi, useSharps);\r\n};\r\nvar enharmonic = function (note) { return simplify(note, false); };\n\nexport { names, tokenize, props, name, pc, midi, midiToFreq, freq, freqToMidi, chroma, oct, stepToLetter, altToAcc, from, build, fromMidi, simplify, enharmonic };\n","var IVL_TNL = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\r\nvar IVL_STR = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\r\nvar REGEX = new RegExp(\"^\" + IVL_TNL + \"|\" + IVL_STR + \"$\");\r\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\r\nvar TYPES = \"PMMPPMM\";\r\nvar CLASSES = [0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1];\r\nvar NAMES = \"1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P\".split(\" \");\r\nvar names = function (types) {\r\n    return typeof types !== \"string\"\r\n        ? NAMES.slice()\r\n        : NAMES.filter(function (n) { return types.indexOf(n[1]) !== -1; });\r\n};\r\nvar tokenize = function (str) {\r\n    var m = REGEX.exec(\"\" + str);\r\n    if (m === null)\r\n        return null;\r\n    return (m[1] ? [m[1], m[2]] : [m[4], m[3]]);\r\n};\r\nvar NO_IVL = Object.freeze({\r\n    name: null,\r\n    num: null,\r\n    q: null,\r\n    step: null,\r\n    alt: null,\r\n    dir: null,\r\n    type: null,\r\n    simple: null,\r\n    semitones: null,\r\n    chroma: null,\r\n    oct: null\r\n});\r\nvar fillStr = function (s, n) { return Array(Math.abs(n) + 1).join(s); };\r\nvar qToAlt = function (type, q) {\r\n    if (q === \"M\" && type === \"M\")\r\n        return 0;\r\n    if (q === \"P\" && type === \"P\")\r\n        return 0;\r\n    if (q === \"m\" && type === \"M\")\r\n        return -1;\r\n    if (/^A+$/.test(q))\r\n        return q.length;\r\n    if (/^d+$/.test(q))\r\n        return type === \"P\" ? -q.length : -q.length - 1;\r\n    return null;\r\n};\r\nvar altToQ = function (type, alt) {\r\n    if (alt === 0)\r\n        return type === \"M\" ? \"M\" : \"P\";\r\n    else if (alt === -1 && type === \"M\")\r\n        return \"m\";\r\n    else if (alt > 0)\r\n        return fillStr(\"A\", alt);\r\n    else if (alt < 0)\r\n        return fillStr(\"d\", type === \"P\" ? alt : alt + 1);\r\n    else\r\n        return null;\r\n};\r\nvar numToStep = function (num) { return (Math.abs(num) - 1) % 7; };\r\nvar properties = function (str) {\r\n    var t = tokenize(str);\r\n    if (t === null)\r\n        return NO_IVL;\r\n    var p = {\r\n        num: 0,\r\n        q: \"d\",\r\n        name: \"\",\r\n        type: \"M\",\r\n        step: 0,\r\n        dir: -1,\r\n        simple: 1,\r\n        alt: 0,\r\n        oct: 0,\r\n        semitones: 0,\r\n        chroma: 0,\r\n        ic: 0\r\n    };\r\n    p.num = +t[0];\r\n    p.q = t[1];\r\n    p.step = numToStep(p.num);\r\n    p.type = TYPES[p.step];\r\n    if (p.type === \"M\" && p.q === \"P\")\r\n        return NO_IVL;\r\n    p.name = \"\" + p.num + p.q;\r\n    p.dir = p.num < 0 ? -1 : 1;\r\n    p.simple = (p.num === 8 || p.num === -8\r\n        ? p.num\r\n        : p.dir * (p.step + 1));\r\n    p.alt = qToAlt(p.type, p.q);\r\n    p.oct = Math.floor((Math.abs(p.num) - 1) / 7);\r\n    p.semitones = p.dir * (SIZES[p.step] + p.alt + 12 * p.oct);\r\n    p.chroma = ((((p.dir * (SIZES[p.step] + p.alt)) % 12) + 12) %\r\n        12);\r\n    return Object.freeze(p);\r\n};\r\nvar cache = {};\r\nfunction props(str) {\r\n    if (typeof str !== \"string\")\r\n        return NO_IVL;\r\n    return cache[str] || (cache[str] = properties(str));\r\n}\r\nvar num = function (str) { return props(str).num; };\r\nvar name = function (str) { return props(str).name; };\r\nvar semitones = function (str) { return props(str).semitones; };\r\nvar chroma = function (str) { return props(str).chroma; };\r\nvar ic = function (ivl) {\r\n    if (typeof ivl === \"string\")\r\n        ivl = props(ivl).chroma;\r\n    return typeof ivl === \"number\" ? CLASSES[ivl % 12] : null;\r\n};\r\nvar build = function (_a) {\r\n    var _b = _a === void 0 ? {} : _a, num = _b.num, step = _b.step, alt = _b.alt, _c = _b.oct, oct = _c === void 0 ? 1 : _c, dir = _b.dir;\r\n    if (step !== undefined)\r\n        num = step + 1 + 7 * oct;\r\n    if (num === undefined)\r\n        return null;\r\n    if (typeof alt !== \"number\")\r\n        return null;\r\n    var d = typeof dir !== \"number\" ? \"\" : dir < 0 ? \"-\" : \"\";\r\n    var type = TYPES[numToStep(num)];\r\n    return (d + num + altToQ(type, alt));\r\n};\r\nvar simplify = function (str) {\r\n    var p = props(str);\r\n    if (p === NO_IVL)\r\n        return null;\r\n    var intervalProps = p;\r\n    return intervalProps.simple + intervalProps.q;\r\n};\r\nvar invert = function (str) {\r\n    var p = props(str);\r\n    if (p === NO_IVL)\r\n        return null;\r\n    var intervalProps = p;\r\n    var step = (7 - intervalProps.step) % 7;\r\n    var alt = intervalProps.type === \"P\" ? -intervalProps.alt : -(intervalProps.alt + 1);\r\n    return build({ step: step, alt: alt, oct: intervalProps.oct, dir: intervalProps.dir });\r\n};\r\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\r\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\r\nvar fromSemitones = function (num) {\r\n    var d = num < 0 ? -1 : 1;\r\n    var n = Math.abs(num);\r\n    var c = n % 12;\r\n    var o = Math.floor(n / 12);\r\n    return d * (IN[c] + 7 * o) + IQ[c];\r\n};\n\nexport { names, tokenize, qToAlt, altToQ, props, num, name, semitones, chroma, ic, build, simplify, invert, fromSemitones };\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-array.svg?style=flat-square)](https://www.npmjs.com/package/tonal-array)\n *\n * Tonal array utilities. Create ranges, sort notes, ...\n *\n * @example\n * import * as Array;\n * Array.sort([\"f\", \"a\", \"c\"]) // => [\"C\", \"F\", \"A\"]\n *\n * @example\n * const Array = require(\"tonal-array\")\n * Array.range(1, 4) // => [1, 2, 3, 4]\n *\n * @module Array\n */\nimport { props, name } from \"tonal-note\";\n\n// ascending range\nfunction ascR(b, n) {\n  for (var a = []; n--; a[n] = n + b){ ; }\n  return a;\n}\n// descending range\nfunction descR(b, n) {\n  for (var a = []; n--; a[n] = b - n){ ; }\n  return a;\n}\n\n/**\n * Create a numeric range\n *\n * @param {Number} from\n * @param {Number} to\n * @return {Array}\n *\n * @example\n * Array.range(-2, 2) // => [-2, -1, 0, 1, 2]\n * Array.range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(a, b) {\n  return a === null || b === null\n    ? []\n    : a < b\n      ? ascR(a, b - a + 1)\n      : descR(a, a - b + 1);\n}\n/**\n *\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n * @example\n * Array.rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate(times, arr) {\n  var len = arr.length;\n  var n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * Array.compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport var compact = function (arr) { return arr.filter(function (n) { return n === 0 || n; }); };\n\n// a function that get note heights (with negative number for pitch classes)\nvar height = function (name) {\n  var m = props(name).midi;\n  return m !== null ? m : props(name + \"-100\").midi;\n};\n\n/**\n * Sort an array of notes in ascending order\n *\n * @param {String|Array} notes\n * @return {Array} sorted array of notes\n */\nexport function sort(src) {\n  return compact(src.map(name)).sort(function (a, b) { return height(a) > height(b); });\n}\n\n/**\n * Get sorted notes with duplicates removed\n *\n * @function\n * @param {Array} notes\n */\nexport function unique(arr) {\n  return sort(arr).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @private\n * @function\n * @param {Array|String} arr - the array\n * @return {Array} the shuffled array\n *\n * @example\n * Array.shuffle([\"C\", \"D\", \"E\", \"F\"])\n */\nexport var shuffle = function (arr, rnd) {\n  if ( rnd === void 0 ) rnd = Math.random;\n\n  var i, t;\n  var m = arr.length;\n  while (m) {\n    i = (rnd() * m--) | 0;\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n};\n\n/**\n * Get all permutations of an array\n * http://stackoverflow.com/questions/9960908/permutations-in-javascript\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n */\nexport var permutations = function (arr) {\n  if (arr.length === 0) { return [[]]; }\n  return permutations(arr.slice(1)).reduce(function(acc, perm) {\n    return acc.concat(\n      arr.map(function(e, pos) {\n        var newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n};\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-pcset.svg?style=flat-square)](https://www.npmjs.com/package/tonal-pcset)\n * [![tonal](https://img.shields.io/badge/tonal-pcset-yellow.svg?style=flat-square)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-pcset` is a collection of functions to work with pitch class sets, oriented\n * to make comparations (isEqual, isSubset, isSuperset)\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * You can install via npm: `npm i --save tonal-pcset`\n *\n * ```js\n * // es6\n * import PcSet from \"tonal-pcset\"\n * var PcSet = require(\"tonal-pcset\")\n *\n * PcSet.isEqual(\"c2 d5 e6\", \"c6 e3 d1\") // => true\n * ```\n *\n * ## API documentation\n *\n * @module PcSet\n */\nimport { chroma as notechr } from \"tonal-note\";\nimport { chroma as ivlchr } from \"tonal-interval\";\nimport { rotate, range, compact } from \"tonal-array\";\n\nvar chr = function (str) { return notechr(str) || ivlchr(str) || 0; };\nvar pcsetNum = function (set) { return parseInt(chroma(set), 2); };\nvar clen = function (chroma) { return chroma.replace(/0/g, \"\").length; };\n\n/**\n * Get chroma of a pitch class set. A chroma identifies each set uniquely.\n * It\"s a 12-digit binary each presenting one semitone of the octave.\n *\n * Note that this function accepts a chroma as parameter and return it\n * without modification.\n *\n * @param {Array|String} set - the pitch class set\n * @return {String} a binary representation of the pitch class set\n * @example\n * PcSet.chroma([\"C\", \"D\", \"E\"]) // => \"1010100000000\"\n */\nexport function chroma(set) {\n  if (isChroma(set)) { return set; }\n  if (!Array.isArray(set)) { return \"\"; }\n  var b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  set.map(chr).forEach(function (i) {\n    b[i] = 1;\n  });\n  return b.join(\"\");\n}\n\nvar all = null;\n/**\n * Get a list of all possible chromas (all possible scales)\n * More information: http://allthescales.org/\n * @return {Array} an array of possible chromas from '10000000000' to '11111111111'\n *\n */\nexport function chromas(n) {\n  all = all || range(2048, 4095).map(function (n) { return n.toString(2); });\n  return typeof n === \"number\"\n    ? all.filter(function (chroma) { return clen(chroma) === n; })\n    : all.slice();\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|String} set - the list of notes or pitchChr of the set\n * @param {Boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<String>} an array with all the modes of the chroma\n *\n * @example\n * PcSet.modes([\"C\", \"D\", \"E\"]).map(PcSet.intervals)\n */\nexport function modes(set, normalize) {\n  normalize = normalize !== false;\n  var binary = chroma(set).split(\"\");\n  return compact(\n    binary.map(function(_, i) {\n      var r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\nvar REGEX = /^[01]{12}$/;\n/**\n * Test if the given string is a pitch class set chroma.\n * @param {String} chroma - the pitch class set chroma\n * @return {Boolean} true if its a valid pcset chroma\n * @example\n * PcSet.isChroma(\"101010101010\") // => true\n * PcSet.isChroma(\"101001\") // => false\n */\nexport function isChroma(set) {\n  return REGEX.test(set);\n}\n\nvar IVLS = \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\".split(\" \");\n/**\n * Given a pcset (notes or chroma) return it\"s intervals\n * @param {String|Array} pcset - the pitch class set (notes or chroma)\n * @return {Array} intervals or empty array if not valid pcset\n * @example\n * PcSet.intervals(\"1010100000000\") => [\"1P\", \"2M\", \"3M\"]\n */\nexport function intervals(set) {\n  if (!isChroma(set)) { return []; }\n  return compact(\n    set.split(\"\").map(function(d, i) {\n      return d === \"1\" ? IVLS[i] : null;\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are identical\n *\n * @param {Array|String} set1 - one of the pitch class sets\n * @param {Array|String} set2 - the other pitch class set\n * @return {Boolean} true if they are equal\n * @example\n * PcSet.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1, s2) {\n  if (arguments.length === 1) { return function (s) { return isEqual(s1, s); }; }\n  return chroma(s1) === chroma(s2);\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function can be partially applied\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a subset of set, false otherwise\n * @example\n * const inCMajor = PcSet.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set, notes) {\n  if (arguments.length > 1) { return isSubsetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes & set) === notes;\n  };\n}\n\n/**\n * Create a function that test if a collectio of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a superset of set, false otherwise\n * @example\n * const extendsCMajor = PcSet.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set, notes) {\n  if (arguments.length > 1) { return isSupersetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes | set) === notes;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n * @param {Array|String} set - the base set to test against\n * @param {String|Pitch} note - the note to test\n * @return {Boolean} true if the note is included in the pcset\n * @example\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C4\") // => true\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C#4\") // => false\n */\nexport function includes(set, note) {\n  if (arguments.length > 1) { return includes(set)(note); }\n  set = chroma(set);\n  return function(note) {\n    return set[chr(note)] === \"1\";\n  };\n}\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|String} set - the pitch class set notes\n * @param {Array|String} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * PcSet.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * PcSet.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set, notes) {\n  if (arguments.length === 1) { return function (n) { return filter(set, n); }; }\n  return notes.filter(includes(set));\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-dictionary.svg)](https://www.npmjs.com/package/tonal-dictionary)\n *\n * `tonal-dictionary` contains a dictionary of musical scales and chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Dictionary from \"tonal-dictionary\"\n * // es5\n * const Dictionary = require(\"tonal-dictionary\")\n *\n * @example\n * Dictionary.chord(\"Maj7\") // => [\"1P\", \"3M\", \"5P\", \"7M\"]\n *\n * @module Dictionary\n */\nimport sdata from \"./data/scales.json\";\nimport cdata from \"./data/chords.json\";\nimport { chroma } from \"tonal-pcset\";\n\nexport var dictionary = function (raw) {\n  var keys = Object.keys(raw).sort();\n  var data = [];\n  var index = [];\n\n  var add = function (name, ivls, chroma) {\n    data[name] = ivls;\n    index[chroma] = index[chroma] || [];\n    index[chroma].push(name);\n  };\n\n  keys.forEach(function (key) {\n    var ivls = raw[key][0].split(\" \");\n    var alias = raw[key][1];\n    var chr = chroma(ivls);\n\n    add(key, ivls, chr);\n    if (alias) { alias.forEach(function (a) { return add(a, ivls, chr); }); }\n  });\n  var allKeys = Object.keys(data).sort();\n\n  var dict = function (name) { return data[name]; };\n  dict.names = function (p) {\n    if (typeof p === \"string\") { return (index[p] || []).slice(); }\n    else { return (p === true ? allKeys : keys).slice(); }\n  };\n  return dict;\n};\n\nexport var combine = function (a, b) {\n  var dict = function (name) { return a(name) || b(name); };\n  dict.names = function (p) { return a.names(p).concat(b.names(p)); };\n  return dict;\n};\n\n/**\n * A dictionary of scales: a function that given a scale name (without tonic)\n * returns an array of intervals\n *\n * @function\n * @param {String} name\n * @return {Array} intervals\n * @example\n * import { scale } from \"tonal-dictionary\"\n * scale(\"major\") // => [\"1P\", \"2M\", ...]\n * scale.names(); // => [\"major\", ...]\n */\nexport var scale = dictionary(sdata);\n\n/**\n * A dictionary of chords: a function that given a chord type\n * returns an array of intervals\n *\n * @function\n * @param {String} type\n * @return {Array} intervals\n * @example\n * import { chord } from \"tonal-dictionary\"\n * chord(\"Maj7\") // => [\"1P\", \"3M\", ...]\n * chord.names(); // => [\"Maj3\", ...]\n */\nexport var chord = dictionary(cdata);\nexport var pcset = combine(scale, chord);\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-array.svg?style=flat-square)](https://www.npmjs.com/package/tonal-array)\n *\n * Tonal array utilities. Create ranges, sort notes, ...\n *\n * @example\n * import * as Array;\n * Array.sort([\"f\", \"a\", \"c\"]) // => [\"C\", \"F\", \"A\"]\n *\n * @example\n * const Array = require(\"tonal-array\")\n * Array.range(1, 4) // => [1, 2, 3, 4]\n *\n * @module Array\n */\nimport { props, name } from \"tonal-note\";\n\n// ascending range\nfunction ascR(b, n) {\n  for (var a = []; n--; a[n] = n + b){ ; }\n  return a;\n}\n// descending range\nfunction descR(b, n) {\n  for (var a = []; n--; a[n] = b - n){ ; }\n  return a;\n}\n\n/**\n * Create a numeric range\n *\n * @param {Number} from\n * @param {Number} to\n * @return {Array}\n *\n * @example\n * Array.range(-2, 2) // => [-2, -1, 0, 1, 2]\n * Array.range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(a, b) {\n  return a === null || b === null\n    ? []\n    : a < b\n      ? ascR(a, b - a + 1)\n      : descR(a, a - b + 1);\n}\n/**\n *\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n * @example\n * Array.rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate(times, arr) {\n  var len = arr.length;\n  var n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * Array.compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport var compact = function (arr) { return arr.filter(function (n) { return n === 0 || n; }); };\n\n// a function that get note heights (with negative number for pitch classes)\nvar height = function (name) {\n  var m = props(name).midi;\n  return m !== null ? m : props(name + \"-100\").midi;\n};\n\n/**\n * Sort an array of notes in ascending order\n *\n * @param {String|Array} notes\n * @return {Array} sorted array of notes\n */\nexport function sort(src) {\n  return compact(src.map(name)).sort(function (a, b) { return height(a) > height(b); });\n}\n\n/**\n * Get sorted notes with duplicates removed\n *\n * @function\n * @param {Array} notes\n */\nexport function unique(arr) {\n  return sort(arr).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @private\n * @function\n * @param {Array|String} arr - the array\n * @return {Array} the shuffled array\n *\n * @example\n * Array.shuffle([\"C\", \"D\", \"E\", \"F\"])\n */\nexport var shuffle = function (arr, rnd) {\n  if ( rnd === void 0 ) rnd = Math.random;\n\n  var i, t;\n  var m = arr.length;\n  while (m) {\n    i = (rnd() * m--) | 0;\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n};\n\n/**\n * Get all permutations of an array\n * http://stackoverflow.com/questions/9960908/permutations-in-javascript\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n */\nexport var permutations = function (arr) {\n  if (arr.length === 0) { return [[]]; }\n  return permutations(arr.slice(1)).reduce(function(acc, perm) {\n    return acc.concat(\n      arr.map(function(e, pos) {\n        var newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n};\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-pcset.svg?style=flat-square)](https://www.npmjs.com/package/tonal-pcset)\n * [![tonal](https://img.shields.io/badge/tonal-pcset-yellow.svg?style=flat-square)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-pcset` is a collection of functions to work with pitch class sets, oriented\n * to make comparations (isEqual, isSubset, isSuperset)\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * You can install via npm: `npm i --save tonal-pcset`\n *\n * ```js\n * // es6\n * import PcSet from \"tonal-pcset\"\n * var PcSet = require(\"tonal-pcset\")\n *\n * PcSet.isEqual(\"c2 d5 e6\", \"c6 e3 d1\") // => true\n * ```\n *\n * ## API documentation\n *\n * @module PcSet\n */\nimport { chroma as notechr } from \"tonal-note\";\nimport { chroma as ivlchr } from \"tonal-interval\";\nimport { rotate, range, compact } from \"tonal-array\";\n\nvar chr = function (str) { return notechr(str) || ivlchr(str) || 0; };\nvar pcsetNum = function (set) { return parseInt(chroma(set), 2); };\nvar clen = function (chroma) { return chroma.replace(/0/g, \"\").length; };\n\n/**\n * Get chroma of a pitch class set. A chroma identifies each set uniquely.\n * It\"s a 12-digit binary each presenting one semitone of the octave.\n *\n * Note that this function accepts a chroma as parameter and return it\n * without modification.\n *\n * @param {Array|String} set - the pitch class set\n * @return {String} a binary representation of the pitch class set\n * @example\n * PcSet.chroma([\"C\", \"D\", \"E\"]) // => \"1010100000000\"\n */\nexport function chroma(set) {\n  if (isChroma(set)) { return set; }\n  if (!Array.isArray(set)) { return \"\"; }\n  var b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  set.map(chr).forEach(function (i) {\n    b[i] = 1;\n  });\n  return b.join(\"\");\n}\n\nvar all = null;\n/**\n * Get a list of all possible chromas (all possible scales)\n * More information: http://allthescales.org/\n * @return {Array} an array of possible chromas from '10000000000' to '11111111111'\n *\n */\nexport function chromas(n) {\n  all = all || range(2048, 4095).map(function (n) { return n.toString(2); });\n  return typeof n === \"number\"\n    ? all.filter(function (chroma) { return clen(chroma) === n; })\n    : all.slice();\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|String} set - the list of notes or pitchChr of the set\n * @param {Boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<String>} an array with all the modes of the chroma\n *\n * @example\n * PcSet.modes([\"C\", \"D\", \"E\"]).map(PcSet.intervals)\n */\nexport function modes(set, normalize) {\n  normalize = normalize !== false;\n  var binary = chroma(set).split(\"\");\n  return compact(\n    binary.map(function(_, i) {\n      var r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\nvar REGEX = /^[01]{12}$/;\n/**\n * Test if the given string is a pitch class set chroma.\n * @param {String} chroma - the pitch class set chroma\n * @return {Boolean} true if its a valid pcset chroma\n * @example\n * PcSet.isChroma(\"101010101010\") // => true\n * PcSet.isChroma(\"101001\") // => false\n */\nexport function isChroma(set) {\n  return REGEX.test(set);\n}\n\nvar IVLS = \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\".split(\" \");\n/**\n * Given a pcset (notes or chroma) return it\"s intervals\n * @param {String|Array} pcset - the pitch class set (notes or chroma)\n * @return {Array} intervals or empty array if not valid pcset\n * @example\n * PcSet.intervals(\"1010100000000\") => [\"1P\", \"2M\", \"3M\"]\n */\nexport function intervals(set) {\n  if (!isChroma(set)) { return []; }\n  return compact(\n    set.split(\"\").map(function(d, i) {\n      return d === \"1\" ? IVLS[i] : null;\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are identical\n *\n * @param {Array|String} set1 - one of the pitch class sets\n * @param {Array|String} set2 - the other pitch class set\n * @return {Boolean} true if they are equal\n * @example\n * PcSet.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1, s2) {\n  if (arguments.length === 1) { return function (s) { return isEqual(s1, s); }; }\n  return chroma(s1) === chroma(s2);\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function can be partially applied\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a subset of set, false otherwise\n * @example\n * const inCMajor = PcSet.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set, notes) {\n  if (arguments.length > 1) { return isSubsetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes & set) === notes;\n  };\n}\n\n/**\n * Create a function that test if a collectio of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a superset of set, false otherwise\n * @example\n * const extendsCMajor = PcSet.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set, notes) {\n  if (arguments.length > 1) { return isSupersetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes | set) === notes;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n * @param {Array|String} set - the base set to test against\n * @param {String|Pitch} note - the note to test\n * @return {Boolean} true if the note is included in the pcset\n * @example\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C4\") // => true\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C#4\") // => false\n */\nexport function includes(set, note) {\n  if (arguments.length > 1) { return includes(set)(note); }\n  set = chroma(set);\n  return function(note) {\n    return set[chr(note)] === \"1\";\n  };\n}\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|String} set - the pitch class set notes\n * @param {Array|String} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * PcSet.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * PcSet.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set, notes) {\n  if (arguments.length === 1) { return function (n) { return filter(set, n); }; }\n  return notes.filter(includes(set));\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-detect.svg?style=flat-square)](https://www.npmjs.com/package/tonal-detect)\n *\n * Find chord and scale names from a collection of notes or pitch classes\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * import { chord } from \"tonal-detect\"\n * chord([\"C\", \"E\", \"G\", \"A\"]) // => [\"CM6\", \"Am7\"]\n *\n * @example\n * const Detect = require(\"tonal-detect\")\n * Detect.chord([\"C\", \"E\", \"G\", \"A\"]) // => [\"CM6\", \"Am7\"]\n *\n * @module Detect\n */\nimport { name, pc } from \"tonal-note\";\nimport * as Dictionary from \"tonal-dictionary\";\nimport { sort, compact } from \"tonal-array\";\nimport { modes } from \"tonal-pcset\";\n\nexport function detector(dictionary, defaultBuilder) {\n  defaultBuilder = defaultBuilder || ((tonic, names) => [tonic, names]);\n  return function(notes, builder) {\n    builder = builder || defaultBuilder;\n    notes = sort(notes.map(pc));\n    return modes(notes)\n      .map((mode, i) => {\n        const tonic = name(notes[i]);\n        const names = dictionary.names(mode);\n        return names.length ? builder(tonic, names) : null;\n      })\n      .filter(x => x);\n  };\n}\n\n/**\n * Given a collection of notes or pitch classes, try to find the chord name\n * @function\n * @param {Array<String>} notes\n * @return {Array<String>} chord names or empty array\n * @example\n * Detect.chord([\"C\", \"E\", \"G\", \"A\"]) // => [\"CM6\", \"Am7\"]\n */\nexport const chord = detector(\n  Dictionary.chord,\n  (tonic, names) => tonic + names[0]\n);\n\n/**\n * Given a collection of notes or pitch classes, try to find the scale names\n * @function\n * @param {Array<String>} notes\n * @return {Array<String>} scale names or empty array\n * @example\n * Detect.scale([\"f3\", \"a\", \"c5\", \"e2\", \"d\", \"g2\", \"b6\"]) // => [\n * \"C major\",\n * \"D dorian\",\n * \"E phrygian\",\n * \"F lydian\",\n * \"G mixolydian\",\n * \"A aeolian\",\n * \"B locrian\"\n * ]\n */\nexport const scale = detector(\n  Dictionary.scale,\n  (tonic, names) => tonic + \" \" + names[0]\n);\n\nexport const pcset = detector(Dictionary.pcset);\n"]}