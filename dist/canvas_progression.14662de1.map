{"version":3,"sources":["js/canvas.js","js/tonal/extensions/detect/node_modules/tonal-note/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-interval/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-dictionary/node_modules/tonal-array/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-dictionary/node_modules/tonal-pcset/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-dictionary/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-array/build/es6.js","js/tonal/extensions/detect/node_modules/tonal-pcset/build/es6.js","js/tonal/extensions/detect/index.js","../packages/note/build/es6.js","../packages/array/build/es6.js","../packages/interval/build/es6.js","../packages/distance/build/es6.js","../packages/pcset/build/es6.js","../packages/scale/build/es6.js","../packages/chord/build/es6.js","../packages/dictionary/build/es6.js","../packages/tonal/index.js","js/dizionario.js","js/Keyboard_JS.js","js/circleFifth.js","js/canvas_progression.js"],"names":["canvas","document","querySelector","ctx","getContext","my_gradient","createLinearGradient","height","addColorStop","matrix","createMatrix","stepx","width","stepy","stato","xy","alpha","blink","arr","i","length","x_canv","y_canv","push","fillStyle","fillRect","console","log","cancel_stato","NAMES","split","names","accTypes","slice","filter","n","acc","indexOf","SHARPS","FLATS","REGEX","tokenize","str","m","exec","toUpperCase","replace","NO_NOTE","Object","freeze","pc","name","step","alt","oct","octStr","chroma","midi","freq","SEMI","properties","tokens","letter","p","charCodeAt","midiToFreq","memo","fn","cache","props","isMidiRange","note","value","tuning","Math","pow","L2","L440","freqToMidi","v","round","LETTERS","stepToLetter","fillStr","s","Array","join","numToStr","num","op","altToAcc","from","fromProps","baseNote","_a","assign","build","fromMidi","sharps","pcs","o","floor","simplify","sameAcc","alteration","useSharps","enharmonic","IVL_TNL","IVL_STR","RegExp","SIZES","TYPES","CLASSES","types","NO_IVL","q","dir","type","simple","semitones","abs","qToAlt","test","altToQ","numToStep","t","ic","ivl","_b","_c","undefined","d","intervalProps","invert","IN","IQ","fromSemitones","c","ascR","b","a","descR","range","rotate","times","len","concat","compact","sort","src","map","unique","shuffle","rnd","random","permutations","reduce","perm","e","pos","newPerm","splice","chr","pcsetNum","set","parseInt","clen","isChroma","isArray","forEach","all","chromas","toString","modes","normalize","binary","_","r","IVLS","intervals","isEqual","s1","s2","arguments","isSubsetOf","notes","isSupersetOf","includes","dictionary","raw","keys","data","index","add","ivls","key","alias","allKeys","dict","combine","scale","sdata","chord","cdata","pcset","detector","defaultBuilder","tonic","builder","mode","x","Dictionary","unaltered","f","transpose","interval","encodeNote","encodeIvl","tr","fromNote","decode","trFifths","fifths","to","transposeBy","addIntervals","ivl1","ivl2","i1","i2","ibuild","decodeIvl","subtract","noteProps","nameOrTonic","exists","noteName","substring","ref","NUM_TYPES","FIFTHS","fOcts","FIFTH_OCTS","encode","STEPS","encoder","iprops","isDescending","notechr","ivlchr","NO_SCALE","setnum","modeNames","tonics","pcsetModes","chords","inScale","toScale","supersets","isSuperset","subsets","isSubset","NO_CHORD","Distance.transpose","Distance.interval","Note.props","Note.midi","Note.freq","Dictionary.chord","Dictionary.scale","dizionario","AudioContext","analyser","createAnalyser","volume_master","createGain","connect","destination","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","gain_vec","chord_","chords_vec","midi_vec","note_vec","collect_note","collect_midi","counter","circle","fill","octave_step","color_chord","maj_scale","scale_maj","chromatic_scale","change_scale","canvas3","context","getKey","obj","entries","find","every","render","vec","y","getElementsByClassName","innerHTML","style","color","textAlign","top","fontWeight","verticalAlign","fontFamily","timeOut","getElementById","onclick","classList","toggle","addEventListener","changeVol","gain","parseFloat","j","clearRect","ctx2","canvas2","$","ready","click","containerWidth","left","css","onkeydown","repeat","keypressed","playNote","setTimeout","midi_num","detect_chord","onkeyup","querySelectorAll","toggleRect","rect_white","onmousedown","clickOnRect","onmouseup","clickOffRect","id","path","navigator","requestMIDIAccess","then","onMIDISuccess","midiAccess","allInputs","inputs","values","input","next","done","onmidimessage","getMIDImessage","midiMessage","on_off","midi_number","createOscillator","g","frequency","linearRampToValueAtTime","currentTime","start","drawSamples","releaseNote","Note","min_midi","min","apply","bass_note","accordo","find_indexes","chiave","key_arr","appoggio","index_maj","getByteFrequencyData","beginPath","lineTo","stroke","strokeStyle","requestAnimationFrame","key_","degree","end","count","flag","array_app","ciao","prop","findKey","vec1","vec2","vec_max","max","indexes","key_found","k","find_degrees","split_array","state","shallow","cancel_degrees","y0","x0","xf","yf","angle","PI","difference","velocity","invert_sign","radius","show_square","Ypos","globalAlpha","rect","font","fillText","choose_color","choose_position","arc","lineWidth","choose_velocity","render_prog","time","sign","cos","sin","tg","clearInterval","clear","setInterval","show_progression","degree_arr","reset_canvas2","change_progression"],"mappings":"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","file":"canvas_progression.14662de1.map","sourceRoot":"..","sourcesContent":["\n//Creo Canvas\nexport var canvas=document.querySelector(\"#canvas\");\nexport var ctx = canvas.getContext(\"2d\")\n\n//creo una sfumatura lineare lungo y di 7 colori\nexport var my_gradient = ctx.createLinearGradient(0,0,0,canvas.height);\nmy_gradient.addColorStop(1/7,\"#E53935\");\nmy_gradient.addColorStop(2/7,\"#FFA726\");\nmy_gradient.addColorStop(3/7,\"#FFEB3B\");\nmy_gradient.addColorStop(4/7,\"#7CB342\");\nmy_gradient.addColorStop(5/7,\"#00796B\");\nmy_gradient.addColorStop(6/7,\"#0277BD\");\nmy_gradient.addColorStop(7/7,\"#0D47A1\");\nvar matrix;\n\nfunction createMatrix(){\n  var stepx = canvas.width/12;\n  var stepy = canvas.height/7;\n  matrix = [[[0,0],[stepx,0],[stepx*2,0],[stepx*3,0],[stepx*4,0],[stepx*5,0],[stepx*6,0],[stepx*7,0],[stepx*8,0],[stepx*9,0],[stepx*10,0],[stepx*11,0]],\n                [[0, stepy],[stepx,stepy],[stepx*2,stepy],[stepx*3,stepy],[stepx*4,stepy],[stepx*5,stepy],[stepx*6,stepy],[stepx*7,stepy],[stepx*8,stepy],[stepx*9,stepy],[stepx*10,stepy],[stepx*11,stepy]],\n                [[0, stepy*2],[stepx,stepy*2],[stepx*2,stepy*2],[stepx*3,stepy*2],[stepx*4,stepy*2],[stepx*5,stepy*2],[stepx*6,stepy*2],[stepx*7,stepy*2],[stepx*8,stepy*2],[stepx*9,stepy*2],[stepx*10,stepy*2],[stepx*11,stepy*2]],\n                [[0, stepy*3],[stepx,stepy*3],[stepx*2,stepy*3],[stepx*3,stepy*3],[stepx*4,stepy*3],[stepx*5,stepy*3],[stepx*6,stepy*3],[stepx*7,stepy*3],[stepx*8,stepy*3],[stepx*9,stepy*3],[stepx*10,stepy*3],[stepx*11,stepy*3]],\n                [[0, stepy*4],[stepx,stepy*4],[stepx*2,stepy*4],[stepx*3,stepy*4],[stepx*4,stepy*4],[stepx*5,stepy*4],[stepx*6,stepy*4],[stepx*7,stepy*4],[stepx*8,stepy*4],[stepx*9,stepy*4],[stepx*10,stepy*4],[stepx*11,stepy*4]],\n                [[0, stepy*5],[stepx,stepy*5],[stepx*2,stepy*5],[stepx*3,stepy*5],[stepx*4,stepy*5],[stepx*5,stepy*5],[stepx*6,stepy*5],[stepx*7,stepy*5],[stepx*8,stepy*5],[stepx*9,stepy*5],[stepx*10,stepy*5],[stepx*11,stepy*5]],\n                [[0, stepy*6],[stepx,stepy*6],[stepx*2,stepy*6],[stepx*3,stepy*6],[stepx*4,stepy*6],[stepx*5,stepy*6],[stepx*6,stepy*6],[stepx*7,stepy*6],[stepx*8,stepy*6],[stepx*9,stepy*6],[stepx*10,stepy*6],[stepx*11,stepy*6]]]\n\n  }\n\n  createMatrix();\n  //creo e muovo il rect\n\nexport var stato= {\n    xy:[],\n    alpha:[]\n  };\n\nexport function blink(arr){\n  for(var i=0; i<arr.length; i++){\n    var x_canv = arr[i][1];\n    var y_canv =arr[i][0];\n    var alpha= arr[i][2];\n\n    if(x_canv!=stato.xy[i] && y_canv!=stato.xy[i] && alpha!=stato.alpha[i]){\n      stato.xy.push([x_canv,y_canv]);\n      stato.alpha.push(alpha);\n    }\n  //ctx.clearRect(0,0,canvas.width,canvas.height);\n  //ctx.fillRect(x, y, 100, 50);\n    ctx.fillStyle=my_gradient;\n    ctx.fillRect(matrix[x_canv][y_canv][0],matrix[x_canv][y_canv][1],50,30);\n\n  }\nconsole.log(\"stato\", stato.xy);\n}\n\nexport function cancel_stato(){\n  stato.xy= [];\n  stato.alpha=[]\n  console.log(stato.xy);\n}\n","var NAMES = \"C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B\".split(\" \");\r\nvar names = function (accTypes) {\r\n    return typeof accTypes !== \"string\"\r\n        ? NAMES.slice()\r\n        : NAMES.filter(function (n) {\r\n            var acc = n[1] || \" \";\r\n            return accTypes.indexOf(acc) !== -1;\r\n        });\r\n};\r\nvar SHARPS = names(\" #\");\r\nvar FLATS = names(\" b\");\r\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\r\nfunction tokenize(str) {\r\n    if (typeof str !== \"string\")\r\n        str = \"\";\r\n    var m = REGEX.exec(str);\r\n    return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\r\n}\r\nvar NO_NOTE = Object.freeze({\r\n    pc: null,\r\n    name: null,\r\n    step: null,\r\n    alt: null,\r\n    oct: null,\r\n    octStr: null,\r\n    chroma: null,\r\n    midi: null,\r\n    freq: null\r\n});\r\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\r\nvar properties = function (str) {\r\n    var tokens = tokenize(str);\r\n    if (tokens[0] === \"\" || tokens[3] !== \"\")\r\n        return NO_NOTE;\r\n    var letter = tokens[0], acc = tokens[1], octStr = tokens[2];\r\n    var p = {\r\n        letter: letter,\r\n        acc: acc,\r\n        octStr: octStr,\r\n        pc: letter + acc,\r\n        name: letter + acc + octStr,\r\n        step: (letter.charCodeAt(0) + 3) % 7,\r\n        alt: acc[0] === \"b\" ? -acc.length : acc.length,\r\n        oct: octStr.length ? +octStr : null,\r\n        chroma: 0,\r\n        midi: null,\r\n        freq: null\r\n    };\r\n    p.chroma = (SEMI[p.step] + p.alt + 120) % 12;\r\n    p.midi = p.oct !== null ? SEMI[p.step] + p.alt + 12 * (p.oct + 1) : null;\r\n    p.freq = midiToFreq(p.midi);\r\n    return Object.freeze(p);\r\n};\r\nvar memo = function (fn, cache) {\r\n    if (cache === void 0) { cache = {}; }\r\n    return function (str) { return cache[str] || (cache[str] = fn(str)); };\r\n};\r\nvar props = memo(properties);\r\nvar name = function (str) { return props(str).name; };\r\nvar pc = function (str) { return props(str).pc; };\r\nvar isMidiRange = function (m) { return m >= 0 && m <= 127; };\r\nvar midi = function (note) {\r\n    if (typeof note !== \"number\" && typeof note !== \"string\") {\r\n        return null;\r\n    }\r\n    var midi = props(note).midi;\r\n    var value = midi || midi === 0 ? midi : +note;\r\n    return isMidiRange(value) ? value : null;\r\n};\r\nvar midiToFreq = function (midi, tuning) {\r\n    if (tuning === void 0) { tuning = 440; }\r\n    return typeof midi === \"number\" ? Math.pow(2, (midi - 69) / 12) * tuning : null;\r\n};\r\nvar freq = function (note) { return props(note).freq || midiToFreq(note); };\r\nvar L2 = Math.log(2);\r\nvar L440 = Math.log(440);\r\nvar freqToMidi = function (freq) {\r\n    var v = (12 * (Math.log(freq) - L440)) / L2 + 69;\r\n    return Math.round(v * 100) / 100;\r\n};\r\nvar chroma = function (str) { return props(str).chroma; };\r\nvar oct = function (str) { return props(str).oct; };\r\nvar LETTERS = \"CDEFGAB\";\r\nvar stepToLetter = function (step) { return LETTERS[step]; };\r\nvar fillStr = function (s, n) { return Array(n + 1).join(s); };\r\nvar numToStr = function (num, op) {\r\n    return typeof num !== \"number\" ? \"\" : op(num);\r\n};\r\nvar altToAcc = function (alt) {\r\n    return numToStr(alt, function (alt) { return (alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt)); });\r\n};\r\nvar from = function (fromProps, baseNote) {\r\n    if (fromProps === void 0) { fromProps = {}; }\r\n    if (baseNote === void 0) { baseNote = null; }\r\n    var _a = baseNote\r\n        ? Object.assign({}, props(baseNote), fromProps)\r\n        : fromProps, step = _a.step, alt = _a.alt, oct = _a.oct;\r\n    if (typeof step !== \"number\")\r\n        return null;\r\n    var letter = stepToLetter(step);\r\n    if (!letter)\r\n        return null;\r\n    var pc = letter + altToAcc(alt);\r\n    return oct || oct === 0 ? pc + oct : pc;\r\n};\r\nvar build = from;\r\nfunction fromMidi(num, sharps) {\r\n    if (sharps === void 0) { sharps = false; }\r\n    num = Math.round(num);\r\n    var pcs = sharps === true ? SHARPS : FLATS;\r\n    var pc = pcs[num % 12];\r\n    var o = Math.floor(num / 12) - 1;\r\n    return pc + o;\r\n}\r\nvar simplify = function (note, sameAcc) {\r\n    if (sameAcc === void 0) { sameAcc = true; }\r\n    var _a = props(note), alt = _a.alt, chroma = _a.chroma, midi = _a.midi;\r\n    if (chroma === null)\r\n        return null;\r\n    var alteration = alt;\r\n    var useSharps = sameAcc === false ? alteration < 0 : alteration > 0;\r\n    return midi === null\r\n        ? pc(fromMidi(chroma, useSharps))\r\n        : fromMidi(midi, useSharps);\r\n};\r\nvar enharmonic = function (note) { return simplify(note, false); };\n\nexport { names, tokenize, props, name, pc, midi, midiToFreq, freq, freqToMidi, chroma, oct, stepToLetter, altToAcc, from, build, fromMidi, simplify, enharmonic };\n","var IVL_TNL = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\r\nvar IVL_STR = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\r\nvar REGEX = new RegExp(\"^\" + IVL_TNL + \"|\" + IVL_STR + \"$\");\r\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\r\nvar TYPES = \"PMMPPMM\";\r\nvar CLASSES = [0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1];\r\nvar NAMES = \"1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P\".split(\" \");\r\nvar names = function (types) {\r\n    return typeof types !== \"string\"\r\n        ? NAMES.slice()\r\n        : NAMES.filter(function (n) { return types.indexOf(n[1]) !== -1; });\r\n};\r\nvar tokenize = function (str) {\r\n    var m = REGEX.exec(\"\" + str);\r\n    if (m === null)\r\n        return null;\r\n    return (m[1] ? [m[1], m[2]] : [m[4], m[3]]);\r\n};\r\nvar NO_IVL = Object.freeze({\r\n    name: null,\r\n    num: null,\r\n    q: null,\r\n    step: null,\r\n    alt: null,\r\n    dir: null,\r\n    type: null,\r\n    simple: null,\r\n    semitones: null,\r\n    chroma: null,\r\n    oct: null\r\n});\r\nvar fillStr = function (s, n) { return Array(Math.abs(n) + 1).join(s); };\r\nvar qToAlt = function (type, q) {\r\n    if (q === \"M\" && type === \"M\")\r\n        return 0;\r\n    if (q === \"P\" && type === \"P\")\r\n        return 0;\r\n    if (q === \"m\" && type === \"M\")\r\n        return -1;\r\n    if (/^A+$/.test(q))\r\n        return q.length;\r\n    if (/^d+$/.test(q))\r\n        return type === \"P\" ? -q.length : -q.length - 1;\r\n    return null;\r\n};\r\nvar altToQ = function (type, alt) {\r\n    if (alt === 0)\r\n        return type === \"M\" ? \"M\" : \"P\";\r\n    else if (alt === -1 && type === \"M\")\r\n        return \"m\";\r\n    else if (alt > 0)\r\n        return fillStr(\"A\", alt);\r\n    else if (alt < 0)\r\n        return fillStr(\"d\", type === \"P\" ? alt : alt + 1);\r\n    else\r\n        return null;\r\n};\r\nvar numToStep = function (num) { return (Math.abs(num) - 1) % 7; };\r\nvar properties = function (str) {\r\n    var t = tokenize(str);\r\n    if (t === null)\r\n        return NO_IVL;\r\n    var p = {\r\n        num: 0,\r\n        q: \"d\",\r\n        name: \"\",\r\n        type: \"M\",\r\n        step: 0,\r\n        dir: -1,\r\n        simple: 1,\r\n        alt: 0,\r\n        oct: 0,\r\n        semitones: 0,\r\n        chroma: 0,\r\n        ic: 0\r\n    };\r\n    p.num = +t[0];\r\n    p.q = t[1];\r\n    p.step = numToStep(p.num);\r\n    p.type = TYPES[p.step];\r\n    if (p.type === \"M\" && p.q === \"P\")\r\n        return NO_IVL;\r\n    p.name = \"\" + p.num + p.q;\r\n    p.dir = p.num < 0 ? -1 : 1;\r\n    p.simple = (p.num === 8 || p.num === -8\r\n        ? p.num\r\n        : p.dir * (p.step + 1));\r\n    p.alt = qToAlt(p.type, p.q);\r\n    p.oct = Math.floor((Math.abs(p.num) - 1) / 7);\r\n    p.semitones = p.dir * (SIZES[p.step] + p.alt + 12 * p.oct);\r\n    p.chroma = ((((p.dir * (SIZES[p.step] + p.alt)) % 12) + 12) %\r\n        12);\r\n    return Object.freeze(p);\r\n};\r\nvar cache = {};\r\nfunction props(str) {\r\n    if (typeof str !== \"string\")\r\n        return NO_IVL;\r\n    return cache[str] || (cache[str] = properties(str));\r\n}\r\nvar num = function (str) { return props(str).num; };\r\nvar name = function (str) { return props(str).name; };\r\nvar semitones = function (str) { return props(str).semitones; };\r\nvar chroma = function (str) { return props(str).chroma; };\r\nvar ic = function (ivl) {\r\n    if (typeof ivl === \"string\")\r\n        ivl = props(ivl).chroma;\r\n    return typeof ivl === \"number\" ? CLASSES[ivl % 12] : null;\r\n};\r\nvar build = function (_a) {\r\n    var _b = _a === void 0 ? {} : _a, num = _b.num, step = _b.step, alt = _b.alt, _c = _b.oct, oct = _c === void 0 ? 1 : _c, dir = _b.dir;\r\n    if (step !== undefined)\r\n        num = step + 1 + 7 * oct;\r\n    if (num === undefined)\r\n        return null;\r\n    if (typeof alt !== \"number\")\r\n        return null;\r\n    var d = typeof dir !== \"number\" ? \"\" : dir < 0 ? \"-\" : \"\";\r\n    var type = TYPES[numToStep(num)];\r\n    return (d + num + altToQ(type, alt));\r\n};\r\nvar simplify = function (str) {\r\n    var p = props(str);\r\n    if (p === NO_IVL)\r\n        return null;\r\n    var intervalProps = p;\r\n    return intervalProps.simple + intervalProps.q;\r\n};\r\nvar invert = function (str) {\r\n    var p = props(str);\r\n    if (p === NO_IVL)\r\n        return null;\r\n    var intervalProps = p;\r\n    var step = (7 - intervalProps.step) % 7;\r\n    var alt = intervalProps.type === \"P\" ? -intervalProps.alt : -(intervalProps.alt + 1);\r\n    return build({ step: step, alt: alt, oct: intervalProps.oct, dir: intervalProps.dir });\r\n};\r\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\r\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\r\nvar fromSemitones = function (num) {\r\n    var d = num < 0 ? -1 : 1;\r\n    var n = Math.abs(num);\r\n    var c = n % 12;\r\n    var o = Math.floor(n / 12);\r\n    return d * (IN[c] + 7 * o) + IQ[c];\r\n};\n\nexport { names, tokenize, qToAlt, altToQ, props, num, name, semitones, chroma, ic, build, simplify, invert, fromSemitones };\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-array.svg?style=flat-square)](https://www.npmjs.com/package/tonal-array)\n *\n * Tonal array utilities. Create ranges, sort notes, ...\n *\n * @example\n * import * as Array;\n * Array.sort([\"f\", \"a\", \"c\"]) // => [\"C\", \"F\", \"A\"]\n *\n * @example\n * const Array = require(\"tonal-array\")\n * Array.range(1, 4) // => [1, 2, 3, 4]\n *\n * @module Array\n */\nimport { props, name } from \"tonal-note\";\n\n// ascending range\nfunction ascR(b, n) {\n  for (var a = []; n--; a[n] = n + b){ ; }\n  return a;\n}\n// descending range\nfunction descR(b, n) {\n  for (var a = []; n--; a[n] = b - n){ ; }\n  return a;\n}\n\n/**\n * Create a numeric range\n *\n * @param {Number} from\n * @param {Number} to\n * @return {Array}\n *\n * @example\n * Array.range(-2, 2) // => [-2, -1, 0, 1, 2]\n * Array.range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(a, b) {\n  return a === null || b === null\n    ? []\n    : a < b\n      ? ascR(a, b - a + 1)\n      : descR(a, a - b + 1);\n}\n/**\n *\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n * @example\n * Array.rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate(times, arr) {\n  var len = arr.length;\n  var n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * Array.compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport var compact = function (arr) { return arr.filter(function (n) { return n === 0 || n; }); };\n\n// a function that get note heights (with negative number for pitch classes)\nvar height = function (name) {\n  var m = props(name).midi;\n  return m !== null ? m : props(name + \"-100\").midi;\n};\n\n/**\n * Sort an array of notes in ascending order\n *\n * @param {String|Array} notes\n * @return {Array} sorted array of notes\n */\nexport function sort(src) {\n  return compact(src.map(name)).sort(function (a, b) { return height(a) > height(b); });\n}\n\n/**\n * Get sorted notes with duplicates removed\n *\n * @function\n * @param {Array} notes\n */\nexport function unique(arr) {\n  return sort(arr).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @private\n * @function\n * @param {Array|String} arr - the array\n * @return {Array} the shuffled array\n *\n * @example\n * Array.shuffle([\"C\", \"D\", \"E\", \"F\"])\n */\nexport var shuffle = function (arr, rnd) {\n  if ( rnd === void 0 ) rnd = Math.random;\n\n  var i, t;\n  var m = arr.length;\n  while (m) {\n    i = (rnd() * m--) | 0;\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n};\n\n/**\n * Get all permutations of an array\n * http://stackoverflow.com/questions/9960908/permutations-in-javascript\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n */\nexport var permutations = function (arr) {\n  if (arr.length === 0) { return [[]]; }\n  return permutations(arr.slice(1)).reduce(function(acc, perm) {\n    return acc.concat(\n      arr.map(function(e, pos) {\n        var newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n};\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-pcset.svg?style=flat-square)](https://www.npmjs.com/package/tonal-pcset)\n * [![tonal](https://img.shields.io/badge/tonal-pcset-yellow.svg?style=flat-square)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-pcset` is a collection of functions to work with pitch class sets, oriented\n * to make comparations (isEqual, isSubset, isSuperset)\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * You can install via npm: `npm i --save tonal-pcset`\n *\n * ```js\n * // es6\n * import PcSet from \"tonal-pcset\"\n * var PcSet = require(\"tonal-pcset\")\n *\n * PcSet.isEqual(\"c2 d5 e6\", \"c6 e3 d1\") // => true\n * ```\n *\n * ## API documentation\n *\n * @module PcSet\n */\nimport { chroma as notechr } from \"tonal-note\";\nimport { chroma as ivlchr } from \"tonal-interval\";\nimport { rotate, range, compact } from \"tonal-array\";\n\nvar chr = function (str) { return notechr(str) || ivlchr(str) || 0; };\nvar pcsetNum = function (set) { return parseInt(chroma(set), 2); };\nvar clen = function (chroma) { return chroma.replace(/0/g, \"\").length; };\n\n/**\n * Get chroma of a pitch class set. A chroma identifies each set uniquely.\n * It\"s a 12-digit binary each presenting one semitone of the octave.\n *\n * Note that this function accepts a chroma as parameter and return it\n * without modification.\n *\n * @param {Array|String} set - the pitch class set\n * @return {String} a binary representation of the pitch class set\n * @example\n * PcSet.chroma([\"C\", \"D\", \"E\"]) // => \"1010100000000\"\n */\nexport function chroma(set) {\n  if (isChroma(set)) { return set; }\n  if (!Array.isArray(set)) { return \"\"; }\n  var b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  set.map(chr).forEach(function (i) {\n    b[i] = 1;\n  });\n  return b.join(\"\");\n}\n\nvar all = null;\n/**\n * Get a list of all possible chromas (all possible scales)\n * More information: http://allthescales.org/\n * @return {Array} an array of possible chromas from '10000000000' to '11111111111'\n *\n */\nexport function chromas(n) {\n  all = all || range(2048, 4095).map(function (n) { return n.toString(2); });\n  return typeof n === \"number\"\n    ? all.filter(function (chroma) { return clen(chroma) === n; })\n    : all.slice();\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|String} set - the list of notes or pitchChr of the set\n * @param {Boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<String>} an array with all the modes of the chroma\n *\n * @example\n * PcSet.modes([\"C\", \"D\", \"E\"]).map(PcSet.intervals)\n */\nexport function modes(set, normalize) {\n  normalize = normalize !== false;\n  var binary = chroma(set).split(\"\");\n  return compact(\n    binary.map(function(_, i) {\n      var r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\nvar REGEX = /^[01]{12}$/;\n/**\n * Test if the given string is a pitch class set chroma.\n * @param {String} chroma - the pitch class set chroma\n * @return {Boolean} true if its a valid pcset chroma\n * @example\n * PcSet.isChroma(\"101010101010\") // => true\n * PcSet.isChroma(\"101001\") // => false\n */\nexport function isChroma(set) {\n  return REGEX.test(set);\n}\n\nvar IVLS = \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\".split(\" \");\n/**\n * Given a pcset (notes or chroma) return it\"s intervals\n * @param {String|Array} pcset - the pitch class set (notes or chroma)\n * @return {Array} intervals or empty array if not valid pcset\n * @example\n * PcSet.intervals(\"1010100000000\") => [\"1P\", \"2M\", \"3M\"]\n */\nexport function intervals(set) {\n  if (!isChroma(set)) { return []; }\n  return compact(\n    set.split(\"\").map(function(d, i) {\n      return d === \"1\" ? IVLS[i] : null;\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are identical\n *\n * @param {Array|String} set1 - one of the pitch class sets\n * @param {Array|String} set2 - the other pitch class set\n * @return {Boolean} true if they are equal\n * @example\n * PcSet.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1, s2) {\n  if (arguments.length === 1) { return function (s) { return isEqual(s1, s); }; }\n  return chroma(s1) === chroma(s2);\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function can be partially applied\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a subset of set, false otherwise\n * @example\n * const inCMajor = PcSet.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set, notes) {\n  if (arguments.length > 1) { return isSubsetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes & set) === notes;\n  };\n}\n\n/**\n * Create a function that test if a collectio of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a superset of set, false otherwise\n * @example\n * const extendsCMajor = PcSet.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set, notes) {\n  if (arguments.length > 1) { return isSupersetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes | set) === notes;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n * @param {Array|String} set - the base set to test against\n * @param {String|Pitch} note - the note to test\n * @return {Boolean} true if the note is included in the pcset\n * @example\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C4\") // => true\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C#4\") // => false\n */\nexport function includes(set, note) {\n  if (arguments.length > 1) { return includes(set)(note); }\n  set = chroma(set);\n  return function(note) {\n    return set[chr(note)] === \"1\";\n  };\n}\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|String} set - the pitch class set notes\n * @param {Array|String} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * PcSet.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * PcSet.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set, notes) {\n  if (arguments.length === 1) { return function (n) { return filter(set, n); }; }\n  return notes.filter(includes(set));\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-dictionary.svg)](https://www.npmjs.com/package/tonal-dictionary)\n *\n * `tonal-dictionary` contains a dictionary of musical scales and chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Dictionary from \"tonal-dictionary\"\n * // es5\n * const Dictionary = require(\"tonal-dictionary\")\n *\n * @example\n * Dictionary.chord(\"Maj7\") // => [\"1P\", \"3M\", \"5P\", \"7M\"]\n *\n * @module Dictionary\n */\nimport sdata from \"./data/scales.json\";\nimport cdata from \"./data/chords.json\";\nimport { chroma } from \"tonal-pcset\";\n\nexport var dictionary = function (raw) {\n  var keys = Object.keys(raw).sort();\n  var data = [];\n  var index = [];\n\n  var add = function (name, ivls, chroma) {\n    data[name] = ivls;\n    index[chroma] = index[chroma] || [];\n    index[chroma].push(name);\n  };\n\n  keys.forEach(function (key) {\n    var ivls = raw[key][0].split(\" \");\n    var alias = raw[key][1];\n    var chr = chroma(ivls);\n\n    add(key, ivls, chr);\n    if (alias) { alias.forEach(function (a) { return add(a, ivls, chr); }); }\n  });\n  var allKeys = Object.keys(data).sort();\n\n  var dict = function (name) { return data[name]; };\n  dict.names = function (p) {\n    if (typeof p === \"string\") { return (index[p] || []).slice(); }\n    else { return (p === true ? allKeys : keys).slice(); }\n  };\n  return dict;\n};\n\nexport var combine = function (a, b) {\n  var dict = function (name) { return a(name) || b(name); };\n  dict.names = function (p) { return a.names(p).concat(b.names(p)); };\n  return dict;\n};\n\n/**\n * A dictionary of scales: a function that given a scale name (without tonic)\n * returns an array of intervals\n *\n * @function\n * @param {String} name\n * @return {Array} intervals\n * @example\n * import { scale } from \"tonal-dictionary\"\n * scale(\"major\") // => [\"1P\", \"2M\", ...]\n * scale.names(); // => [\"major\", ...]\n */\nexport var scale = dictionary(sdata);\n\n/**\n * A dictionary of chords: a function that given a chord type\n * returns an array of intervals\n *\n * @function\n * @param {String} type\n * @return {Array} intervals\n * @example\n * import { chord } from \"tonal-dictionary\"\n * chord(\"Maj7\") // => [\"1P\", \"3M\", ...]\n * chord.names(); // => [\"Maj3\", ...]\n */\nexport var chord = dictionary(cdata);\nexport var pcset = combine(scale, chord);\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-array.svg?style=flat-square)](https://www.npmjs.com/package/tonal-array)\n *\n * Tonal array utilities. Create ranges, sort notes, ...\n *\n * @example\n * import * as Array;\n * Array.sort([\"f\", \"a\", \"c\"]) // => [\"C\", \"F\", \"A\"]\n *\n * @example\n * const Array = require(\"tonal-array\")\n * Array.range(1, 4) // => [1, 2, 3, 4]\n *\n * @module Array\n */\nimport { props, name } from \"tonal-note\";\n\n// ascending range\nfunction ascR(b, n) {\n  for (var a = []; n--; a[n] = n + b){ ; }\n  return a;\n}\n// descending range\nfunction descR(b, n) {\n  for (var a = []; n--; a[n] = b - n){ ; }\n  return a;\n}\n\n/**\n * Create a numeric range\n *\n * @param {Number} from\n * @param {Number} to\n * @return {Array}\n *\n * @example\n * Array.range(-2, 2) // => [-2, -1, 0, 1, 2]\n * Array.range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(a, b) {\n  return a === null || b === null\n    ? []\n    : a < b\n      ? ascR(a, b - a + 1)\n      : descR(a, a - b + 1);\n}\n/**\n *\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n * @example\n * Array.rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate(times, arr) {\n  var len = arr.length;\n  var n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * Array.compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport var compact = function (arr) { return arr.filter(function (n) { return n === 0 || n; }); };\n\n// a function that get note heights (with negative number for pitch classes)\nvar height = function (name) {\n  var m = props(name).midi;\n  return m !== null ? m : props(name + \"-100\").midi;\n};\n\n/**\n * Sort an array of notes in ascending order\n *\n * @param {String|Array} notes\n * @return {Array} sorted array of notes\n */\nexport function sort(src) {\n  return compact(src.map(name)).sort(function (a, b) { return height(a) > height(b); });\n}\n\n/**\n * Get sorted notes with duplicates removed\n *\n * @function\n * @param {Array} notes\n */\nexport function unique(arr) {\n  return sort(arr).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @private\n * @function\n * @param {Array|String} arr - the array\n * @return {Array} the shuffled array\n *\n * @example\n * Array.shuffle([\"C\", \"D\", \"E\", \"F\"])\n */\nexport var shuffle = function (arr, rnd) {\n  if ( rnd === void 0 ) rnd = Math.random;\n\n  var i, t;\n  var m = arr.length;\n  while (m) {\n    i = (rnd() * m--) | 0;\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n};\n\n/**\n * Get all permutations of an array\n * http://stackoverflow.com/questions/9960908/permutations-in-javascript\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n */\nexport var permutations = function (arr) {\n  if (arr.length === 0) { return [[]]; }\n  return permutations(arr.slice(1)).reduce(function(acc, perm) {\n    return acc.concat(\n      arr.map(function(e, pos) {\n        var newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n};\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-pcset.svg?style=flat-square)](https://www.npmjs.com/package/tonal-pcset)\n * [![tonal](https://img.shields.io/badge/tonal-pcset-yellow.svg?style=flat-square)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-pcset` is a collection of functions to work with pitch class sets, oriented\n * to make comparations (isEqual, isSubset, isSuperset)\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * You can install via npm: `npm i --save tonal-pcset`\n *\n * ```js\n * // es6\n * import PcSet from \"tonal-pcset\"\n * var PcSet = require(\"tonal-pcset\")\n *\n * PcSet.isEqual(\"c2 d5 e6\", \"c6 e3 d1\") // => true\n * ```\n *\n * ## API documentation\n *\n * @module PcSet\n */\nimport { chroma as notechr } from \"tonal-note\";\nimport { chroma as ivlchr } from \"tonal-interval\";\nimport { rotate, range, compact } from \"tonal-array\";\n\nvar chr = function (str) { return notechr(str) || ivlchr(str) || 0; };\nvar pcsetNum = function (set) { return parseInt(chroma(set), 2); };\nvar clen = function (chroma) { return chroma.replace(/0/g, \"\").length; };\n\n/**\n * Get chroma of a pitch class set. A chroma identifies each set uniquely.\n * It\"s a 12-digit binary each presenting one semitone of the octave.\n *\n * Note that this function accepts a chroma as parameter and return it\n * without modification.\n *\n * @param {Array|String} set - the pitch class set\n * @return {String} a binary representation of the pitch class set\n * @example\n * PcSet.chroma([\"C\", \"D\", \"E\"]) // => \"1010100000000\"\n */\nexport function chroma(set) {\n  if (isChroma(set)) { return set; }\n  if (!Array.isArray(set)) { return \"\"; }\n  var b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  set.map(chr).forEach(function (i) {\n    b[i] = 1;\n  });\n  return b.join(\"\");\n}\n\nvar all = null;\n/**\n * Get a list of all possible chromas (all possible scales)\n * More information: http://allthescales.org/\n * @return {Array} an array of possible chromas from '10000000000' to '11111111111'\n *\n */\nexport function chromas(n) {\n  all = all || range(2048, 4095).map(function (n) { return n.toString(2); });\n  return typeof n === \"number\"\n    ? all.filter(function (chroma) { return clen(chroma) === n; })\n    : all.slice();\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|String} set - the list of notes or pitchChr of the set\n * @param {Boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<String>} an array with all the modes of the chroma\n *\n * @example\n * PcSet.modes([\"C\", \"D\", \"E\"]).map(PcSet.intervals)\n */\nexport function modes(set, normalize) {\n  normalize = normalize !== false;\n  var binary = chroma(set).split(\"\");\n  return compact(\n    binary.map(function(_, i) {\n      var r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\nvar REGEX = /^[01]{12}$/;\n/**\n * Test if the given string is a pitch class set chroma.\n * @param {String} chroma - the pitch class set chroma\n * @return {Boolean} true if its a valid pcset chroma\n * @example\n * PcSet.isChroma(\"101010101010\") // => true\n * PcSet.isChroma(\"101001\") // => false\n */\nexport function isChroma(set) {\n  return REGEX.test(set);\n}\n\nvar IVLS = \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\".split(\" \");\n/**\n * Given a pcset (notes or chroma) return it\"s intervals\n * @param {String|Array} pcset - the pitch class set (notes or chroma)\n * @return {Array} intervals or empty array if not valid pcset\n * @example\n * PcSet.intervals(\"1010100000000\") => [\"1P\", \"2M\", \"3M\"]\n */\nexport function intervals(set) {\n  if (!isChroma(set)) { return []; }\n  return compact(\n    set.split(\"\").map(function(d, i) {\n      return d === \"1\" ? IVLS[i] : null;\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are identical\n *\n * @param {Array|String} set1 - one of the pitch class sets\n * @param {Array|String} set2 - the other pitch class set\n * @return {Boolean} true if they are equal\n * @example\n * PcSet.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1, s2) {\n  if (arguments.length === 1) { return function (s) { return isEqual(s1, s); }; }\n  return chroma(s1) === chroma(s2);\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function can be partially applied\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a subset of set, false otherwise\n * @example\n * const inCMajor = PcSet.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set, notes) {\n  if (arguments.length > 1) { return isSubsetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes & set) === notes;\n  };\n}\n\n/**\n * Create a function that test if a collectio of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a superset of set, false otherwise\n * @example\n * const extendsCMajor = PcSet.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set, notes) {\n  if (arguments.length > 1) { return isSupersetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes | set) === notes;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n * @param {Array|String} set - the base set to test against\n * @param {String|Pitch} note - the note to test\n * @return {Boolean} true if the note is included in the pcset\n * @example\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C4\") // => true\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C#4\") // => false\n */\nexport function includes(set, note) {\n  if (arguments.length > 1) { return includes(set)(note); }\n  set = chroma(set);\n  return function(note) {\n    return set[chr(note)] === \"1\";\n  };\n}\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|String} set - the pitch class set notes\n * @param {Array|String} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * PcSet.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * PcSet.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set, notes) {\n  if (arguments.length === 1) { return function (n) { return filter(set, n); }; }\n  return notes.filter(includes(set));\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-detect.svg?style=flat-square)](https://www.npmjs.com/package/tonal-detect)\n *\n * Find chord and scale names from a collection of notes or pitch classes\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * import { chord } from \"tonal-detect\"\n * chord([\"C\", \"E\", \"G\", \"A\"]) // => [\"CM6\", \"Am7\"]\n *\n * @example\n * const Detect = require(\"tonal-detect\")\n * Detect.chord([\"C\", \"E\", \"G\", \"A\"]) // => [\"CM6\", \"Am7\"]\n *\n * @module Detect\n */\nimport { name, pc } from \"tonal-note\";\nimport * as Dictionary from \"tonal-dictionary\";\nimport { sort, compact } from \"tonal-array\";\nimport { modes } from \"tonal-pcset\";\n\nexport function detector(dictionary, defaultBuilder) {\n  defaultBuilder = defaultBuilder || ((tonic, names) => [tonic, names]);\n  return function(notes, builder) {\n    builder = builder || defaultBuilder;\n    notes = sort(notes.map(pc));\n    return modes(notes)\n      .map((mode, i) => {\n        const tonic = name(notes[i]);\n        const names = dictionary.names(mode);\n        return names.length ? builder(tonic, names) : null;\n      })\n      .filter(x => x);\n  };\n}\n\n/**\n * Given a collection of notes or pitch classes, try to find the chord name\n * @function\n * @param {Array<String>} notes\n * @return {Array<String>} chord names or empty array\n * @example\n * Detect.chord([\"C\", \"E\", \"G\", \"A\"]) // => [\"CM6\", \"Am7\"]\n */\nexport const chord = detector(\n  Dictionary.chord,\n  (tonic, names) => tonic + names[0]\n);\n\n/**\n * Given a collection of notes or pitch classes, try to find the scale names\n * @function\n * @param {Array<String>} notes\n * @return {Array<String>} scale names or empty array\n * @example\n * Detect.scale([\"f3\", \"a\", \"c5\", \"e2\", \"d\", \"g2\", \"b6\"]) // => [\n * \"C major\",\n * \"D dorian\",\n * \"E phrygian\",\n * \"F lydian\",\n * \"G mixolydian\",\n * \"A aeolian\",\n * \"B locrian\"\n * ]\n */\nexport const scale = detector(\n  Dictionary.scale,\n  (tonic, names) => tonic + \" \" + names[0]\n);\n\nexport const pcset = detector(Dictionary.pcset);\n","var NAMES = \"C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B\".split(\" \");\r\nvar names = function (accTypes) {\r\n    return typeof accTypes !== \"string\"\r\n        ? NAMES.slice()\r\n        : NAMES.filter(function (n) {\r\n            var acc = n[1] || \" \";\r\n            return accTypes.indexOf(acc) !== -1;\r\n        });\r\n};\r\nvar SHARPS = names(\" #\");\r\nvar FLATS = names(\" b\");\r\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\r\nfunction tokenize(str) {\r\n    if (typeof str !== \"string\")\r\n        str = \"\";\r\n    var m = REGEX.exec(str);\r\n    return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\r\n}\r\nvar NO_NOTE = Object.freeze({\r\n    pc: null,\r\n    name: null,\r\n    step: null,\r\n    alt: null,\r\n    oct: null,\r\n    octStr: null,\r\n    chroma: null,\r\n    midi: null,\r\n    freq: null\r\n});\r\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\r\nvar properties = function (str) {\r\n    var tokens = tokenize(str);\r\n    if (tokens[0] === \"\" || tokens[3] !== \"\")\r\n        return NO_NOTE;\r\n    var letter = tokens[0], acc = tokens[1], octStr = tokens[2];\r\n    var p = {\r\n        letter: letter,\r\n        acc: acc,\r\n        octStr: octStr,\r\n        pc: letter + acc,\r\n        name: letter + acc + octStr,\r\n        step: (letter.charCodeAt(0) + 3) % 7,\r\n        alt: acc[0] === \"b\" ? -acc.length : acc.length,\r\n        oct: octStr.length ? +octStr : null,\r\n        chroma: 0,\r\n        midi: null,\r\n        freq: null\r\n    };\r\n    p.chroma = (SEMI[p.step] + p.alt + 120) % 12;\r\n    p.midi = p.oct !== null ? SEMI[p.step] + p.alt + 12 * (p.oct + 1) : null;\r\n    p.freq = midiToFreq(p.midi);\r\n    return Object.freeze(p);\r\n};\r\nvar memo = function (fn, cache) {\r\n    if (cache === void 0) { cache = {}; }\r\n    return function (str) { return cache[str] || (cache[str] = fn(str)); };\r\n};\r\nvar props = memo(properties);\r\nvar name = function (str) { return props(str).name; };\r\nvar pc = function (str) { return props(str).pc; };\r\nvar isMidiRange = function (m) { return m >= 0 && m <= 127; };\r\nvar midi = function (note) {\r\n    if (typeof note !== \"number\" && typeof note !== \"string\") {\r\n        return null;\r\n    }\r\n    var midi = props(note).midi;\r\n    var value = midi || midi === 0 ? midi : +note;\r\n    return isMidiRange(value) ? value : null;\r\n};\r\nvar midiToFreq = function (midi, tuning) {\r\n    if (tuning === void 0) { tuning = 440; }\r\n    return typeof midi === \"number\" ? Math.pow(2, (midi - 69) / 12) * tuning : null;\r\n};\r\nvar freq = function (note) { return props(note).freq || midiToFreq(note); };\r\nvar L2 = Math.log(2);\r\nvar L440 = Math.log(440);\r\nvar freqToMidi = function (freq) {\r\n    var v = (12 * (Math.log(freq) - L440)) / L2 + 69;\r\n    return Math.round(v * 100) / 100;\r\n};\r\nvar chroma = function (str) { return props(str).chroma; };\r\nvar oct = function (str) { return props(str).oct; };\r\nvar LETTERS = \"CDEFGAB\";\r\nvar stepToLetter = function (step) { return LETTERS[step]; };\r\nvar fillStr = function (s, n) { return Array(n + 1).join(s); };\r\nvar numToStr = function (num, op) {\r\n    return typeof num !== \"number\" ? \"\" : op(num);\r\n};\r\nvar altToAcc = function (alt) {\r\n    return numToStr(alt, function (alt) { return (alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt)); });\r\n};\r\nvar from = function (fromProps, baseNote) {\r\n    if (fromProps === void 0) { fromProps = {}; }\r\n    if (baseNote === void 0) { baseNote = null; }\r\n    var _a = baseNote\r\n        ? Object.assign({}, props(baseNote), fromProps)\r\n        : fromProps, step = _a.step, alt = _a.alt, oct = _a.oct;\r\n    if (typeof step !== \"number\")\r\n        return null;\r\n    var letter = stepToLetter(step);\r\n    if (!letter)\r\n        return null;\r\n    var pc = letter + altToAcc(alt);\r\n    return oct || oct === 0 ? pc + oct : pc;\r\n};\r\nvar build = from;\r\nfunction fromMidi(num, sharps) {\r\n    if (sharps === void 0) { sharps = false; }\r\n    num = Math.round(num);\r\n    var pcs = sharps === true ? SHARPS : FLATS;\r\n    var pc = pcs[num % 12];\r\n    var o = Math.floor(num / 12) - 1;\r\n    return pc + o;\r\n}\r\nvar simplify = function (note, sameAcc) {\r\n    if (sameAcc === void 0) { sameAcc = true; }\r\n    var _a = props(note), alt = _a.alt, chroma = _a.chroma, midi = _a.midi;\r\n    if (chroma === null)\r\n        return null;\r\n    var alteration = alt;\r\n    var useSharps = sameAcc === false ? alteration < 0 : alteration > 0;\r\n    return midi === null\r\n        ? pc(fromMidi(chroma, useSharps))\r\n        : fromMidi(midi, useSharps);\r\n};\r\nvar enharmonic = function (note) { return simplify(note, false); };\n\nexport { names, tokenize, props, name, pc, midi, midiToFreq, freq, freqToMidi, chroma, oct, stepToLetter, altToAcc, from, build, fromMidi, simplify, enharmonic };\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-array.svg?style=flat-square)](https://www.npmjs.com/package/tonal-array)\n *\n * Tonal array utilities. Create ranges, sort notes, ...\n *\n * @example\n * import * as Array;\n * Array.sort([\"f\", \"a\", \"c\"]) // => [\"C\", \"F\", \"A\"]\n *\n * @example\n * const Array = require(\"tonal-array\")\n * Array.range(1, 4) // => [1, 2, 3, 4]\n *\n * @module Array\n */\nimport { props, name } from \"tonal-note\";\n\n// ascending range\nfunction ascR(b, n) {\n  for (var a = []; n--; a[n] = n + b){ ; }\n  return a;\n}\n// descending range\nfunction descR(b, n) {\n  for (var a = []; n--; a[n] = b - n){ ; }\n  return a;\n}\n\n/**\n * Create a numeric range\n *\n * @param {Number} from\n * @param {Number} to\n * @return {Array}\n *\n * @example\n * Array.range(-2, 2) // => [-2, -1, 0, 1, 2]\n * Array.range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(a, b) {\n  return a === null || b === null\n    ? []\n    : a < b\n      ? ascR(a, b - a + 1)\n      : descR(a, a - b + 1);\n}\n/**\n *\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n * @example\n * Array.rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate(times, arr) {\n  var len = arr.length;\n  var n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * Array.compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport var compact = function (arr) { return arr.filter(function (n) { return n === 0 || n; }); };\n\n// a function that get note heights (with negative number for pitch classes)\nvar height = function (name) {\n  var m = props(name).midi;\n  return m !== null ? m : props(name + \"-100\").midi;\n};\n\n/**\n * Sort an array of notes in ascending order\n *\n * @param {String|Array} notes\n * @return {Array} sorted array of notes\n */\nexport function sort(src) {\n  return compact(src.map(name)).sort(function (a, b) { return height(a) > height(b); });\n}\n\n/**\n * Get sorted notes with duplicates removed\n *\n * @function\n * @param {Array} notes\n */\nexport function unique(arr) {\n  return sort(arr).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @private\n * @function\n * @param {Array|String} arr - the array\n * @return {Array} the shuffled array\n *\n * @example\n * Array.shuffle([\"C\", \"D\", \"E\", \"F\"])\n */\nexport var shuffle = function (arr, rnd) {\n  if ( rnd === void 0 ) rnd = Math.random;\n\n  var i, t;\n  var m = arr.length;\n  while (m) {\n    i = (rnd() * m--) | 0;\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n};\n\n/**\n * Get all permutations of an array\n * http://stackoverflow.com/questions/9960908/permutations-in-javascript\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n */\nexport var permutations = function (arr) {\n  if (arr.length === 0) { return [[]]; }\n  return permutations(arr.slice(1)).reduce(function(acc, perm) {\n    return acc.concat(\n      arr.map(function(e, pos) {\n        var newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n};\n","var IVL_TNL = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\r\nvar IVL_STR = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\r\nvar REGEX = new RegExp(\"^\" + IVL_TNL + \"|\" + IVL_STR + \"$\");\r\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\r\nvar TYPES = \"PMMPPMM\";\r\nvar CLASSES = [0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1];\r\nvar NAMES = \"1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P\".split(\" \");\r\nvar names = function (types) {\r\n    return typeof types !== \"string\"\r\n        ? NAMES.slice()\r\n        : NAMES.filter(function (n) { return types.indexOf(n[1]) !== -1; });\r\n};\r\nvar tokenize = function (str) {\r\n    var m = REGEX.exec(\"\" + str);\r\n    if (m === null)\r\n        return null;\r\n    return (m[1] ? [m[1], m[2]] : [m[4], m[3]]);\r\n};\r\nvar NO_IVL = Object.freeze({\r\n    name: null,\r\n    num: null,\r\n    q: null,\r\n    step: null,\r\n    alt: null,\r\n    dir: null,\r\n    type: null,\r\n    simple: null,\r\n    semitones: null,\r\n    chroma: null,\r\n    oct: null\r\n});\r\nvar fillStr = function (s, n) { return Array(Math.abs(n) + 1).join(s); };\r\nvar qToAlt = function (type, q) {\r\n    if (q === \"M\" && type === \"M\")\r\n        return 0;\r\n    if (q === \"P\" && type === \"P\")\r\n        return 0;\r\n    if (q === \"m\" && type === \"M\")\r\n        return -1;\r\n    if (/^A+$/.test(q))\r\n        return q.length;\r\n    if (/^d+$/.test(q))\r\n        return type === \"P\" ? -q.length : -q.length - 1;\r\n    return null;\r\n};\r\nvar altToQ = function (type, alt) {\r\n    if (alt === 0)\r\n        return type === \"M\" ? \"M\" : \"P\";\r\n    else if (alt === -1 && type === \"M\")\r\n        return \"m\";\r\n    else if (alt > 0)\r\n        return fillStr(\"A\", alt);\r\n    else if (alt < 0)\r\n        return fillStr(\"d\", type === \"P\" ? alt : alt + 1);\r\n    else\r\n        return null;\r\n};\r\nvar numToStep = function (num) { return (Math.abs(num) - 1) % 7; };\r\nvar properties = function (str) {\r\n    var t = tokenize(str);\r\n    if (t === null)\r\n        return NO_IVL;\r\n    var p = {\r\n        num: 0,\r\n        q: \"d\",\r\n        name: \"\",\r\n        type: \"M\",\r\n        step: 0,\r\n        dir: -1,\r\n        simple: 1,\r\n        alt: 0,\r\n        oct: 0,\r\n        semitones: 0,\r\n        chroma: 0,\r\n        ic: 0\r\n    };\r\n    p.num = +t[0];\r\n    p.q = t[1];\r\n    p.step = numToStep(p.num);\r\n    p.type = TYPES[p.step];\r\n    if (p.type === \"M\" && p.q === \"P\")\r\n        return NO_IVL;\r\n    p.name = \"\" + p.num + p.q;\r\n    p.dir = p.num < 0 ? -1 : 1;\r\n    p.simple = (p.num === 8 || p.num === -8\r\n        ? p.num\r\n        : p.dir * (p.step + 1));\r\n    p.alt = qToAlt(p.type, p.q);\r\n    p.oct = Math.floor((Math.abs(p.num) - 1) / 7);\r\n    p.semitones = p.dir * (SIZES[p.step] + p.alt + 12 * p.oct);\r\n    p.chroma = ((((p.dir * (SIZES[p.step] + p.alt)) % 12) + 12) %\r\n        12);\r\n    return Object.freeze(p);\r\n};\r\nvar cache = {};\r\nfunction props(str) {\r\n    if (typeof str !== \"string\")\r\n        return NO_IVL;\r\n    return cache[str] || (cache[str] = properties(str));\r\n}\r\nvar num = function (str) { return props(str).num; };\r\nvar name = function (str) { return props(str).name; };\r\nvar semitones = function (str) { return props(str).semitones; };\r\nvar chroma = function (str) { return props(str).chroma; };\r\nvar ic = function (ivl) {\r\n    if (typeof ivl === \"string\")\r\n        ivl = props(ivl).chroma;\r\n    return typeof ivl === \"number\" ? CLASSES[ivl % 12] : null;\r\n};\r\nvar build = function (_a) {\r\n    var _b = _a === void 0 ? {} : _a, num = _b.num, step = _b.step, alt = _b.alt, _c = _b.oct, oct = _c === void 0 ? 1 : _c, dir = _b.dir;\r\n    if (step !== undefined)\r\n        num = step + 1 + 7 * oct;\r\n    if (num === undefined)\r\n        return null;\r\n    if (typeof alt !== \"number\")\r\n        return null;\r\n    var d = typeof dir !== \"number\" ? \"\" : dir < 0 ? \"-\" : \"\";\r\n    var type = TYPES[numToStep(num)];\r\n    return (d + num + altToQ(type, alt));\r\n};\r\nvar simplify = function (str) {\r\n    var p = props(str);\r\n    if (p === NO_IVL)\r\n        return null;\r\n    var intervalProps = p;\r\n    return intervalProps.simple + intervalProps.q;\r\n};\r\nvar invert = function (str) {\r\n    var p = props(str);\r\n    if (p === NO_IVL)\r\n        return null;\r\n    var intervalProps = p;\r\n    var step = (7 - intervalProps.step) % 7;\r\n    var alt = intervalProps.type === \"P\" ? -intervalProps.alt : -(intervalProps.alt + 1);\r\n    return build({ step: step, alt: alt, oct: intervalProps.oct, dir: intervalProps.dir });\r\n};\r\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\r\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\r\nvar fromSemitones = function (num) {\r\n    var d = num < 0 ? -1 : 1;\r\n    var n = Math.abs(num);\r\n    var c = n % 12;\r\n    var o = Math.floor(n / 12);\r\n    return d * (IN[c] + 7 * o) + IQ[c];\r\n};\n\nexport { names, tokenize, qToAlt, altToQ, props, num, name, semitones, chroma, ic, build, simplify, invert, fromSemitones };\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-distance.svg)](https://www.npmjs.com/package/tonal-distance)\n * [![tonal](https://img.shields.io/badge/tonal-distance-yellow.svg)](https://github.com/danigb/tonal/tree/master/packages/tonal/distance)\n *\n * Transpose notes by intervals and find distances between notes\n *\n * @example\n * // es6\n * import * as Distance from \"tonal-distance\"\n * Distance.interval(\"C3\", \"C4\") // => \"1P\"\n *\n * @example\n * // es6 import selected functions\n * import { interval, semitones, transpose } from \"tonal-distance\"\n *\n * semitones(\"C\" ,\"D\") // => 2\n * interval(\"C4\", \"G4\") // => \"5P\"\n * transpose(\"C4\", \"P5\") // => \"G4\"\n *\n * @example\n * // included in tonal facade\n * const Tonal = require(\"tonal\");\n * Tonal.Distance.transpose(\"C4\", \"P5\")\n * Tonal.Distance.transposeBy(\"P5\", \"C4\")\n *\n * @module Distance\n */\nimport { props as noteProps, build as fromNote } from \"tonal-note\";\nimport { props as iprops, build as ibuild } from \"tonal-interval\";\n\n// Map from letter step to number of fifths starting from \"C\":\n// { C: 0, D: 2, E: 4, F: -1, G: 1, A: 3, B: 5 }\nvar FIFTHS = [0, 2, 4, -1, 1, 3, 5];\n\n// Given a number of fifths, return the octaves they span\nvar fOcts = function (f) { return Math.floor((f * 7) / 12); };\n\n// Get the number of octaves it span each step\nvar FIFTH_OCTS = FIFTHS.map(fOcts);\n\nvar encode = function (ref) {\n  var step = ref.step;\n  var alt = ref.alt;\n  var oct = ref.oct;\n  var dir = ref.dir; if ( dir === void 0 ) dir = 1;\n\n  var f = FIFTHS[step] + 7 * alt;\n  if (oct === null) { return [dir * f]; }\n  var o = oct - FIFTH_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n};\n\n// We need to get the steps from fifths\n// Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\n// We add 1 to fifths to avoid negative numbers, so:\n// for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\nvar STEPS = [3, 0, 4, 1, 5, 2, 6];\n\n// Return the number of fifths as if it were unaltered\nfunction unaltered(f) {\n  var i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\n\nvar decode = function (f, o, dir) {\n  var step = STEPS[unaltered(f)];\n  var alt = Math.floor((f + 1) / 7);\n  if (o === undefined) { return { step: step, alt: alt, dir: dir }; }\n  var oct = o + 4 * alt + FIFTH_OCTS[step];\n  return { step: step, alt: alt, oct: oct, dir: dir };\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\nvar encoder = function (props) { return memo(function (str) {\n    var p = props(str);\n    return p.name === null ? null : encode(p);\n  }); };\n\nvar encodeNote = encoder(noteProps);\nvar encodeIvl = encoder(iprops);\n\n/**\n * Transpose a note by an interval. The note can be a pitch class.\n *\n * This function can be partially applied.\n *\n * @param {String} note\n * @param {String} interval\n * @return {String} the transposed note\n * @example\n * import { tranpose } from \"tonal-distance\"\n * transpose(\"d3\", \"3M\") // => \"F#3\"\n * // it works with pitch classes\n * transpose(\"D\", \"3M\") // => \"F#\"\n * // can be partially applied\n * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(transpose(\"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\n */\nexport function transpose(note, interval) {\n  if (arguments.length === 1) { return function (i) { return transpose(note, i); }; }\n  var n = encodeNote(note);\n  var i = encodeIvl(interval);\n  if (n === null || i === null) { return null; }\n  var tr = n.length === 1 ? [n[0] + i[0]] : [n[0] + i[0], n[1] + i[1]];\n  return fromNote(decode(tr[0], tr[1]));\n}\n\n/**\n * Transpose a pitch class by a number of perfect fifths.\n *\n * It can be partially applied.\n *\n * @function\n * @param {String} pitchClass - the pitch class\n * @param {Integer} fifhts - the number of fifths\n * @return {String} the transposed pitch class\n *\n * @example\n * import { trFifths } from \"tonal-transpose\"\n * [0, 1, 2, 3, 4].map(trFifths(\"C\")) // => [\"C\", \"G\", \"D\", \"A\", \"E\"]\n * // or using tonal\n * Distance.trFifths(\"G4\", 1) // => \"D\"\n */\n\nexport function trFifths(note, fifths) {\n  if (arguments.length === 1) { return function (f) { return trFifths(note, f); }; }\n  var n = encodeNote(note);\n  if (n === null) { return null; }\n  return fromNote(decode(n[0] + fifths));\n}\n\n/**\n * Get the distance in fifths between pitch classes\n *\n * Can be partially applied.\n *\n * @param {String} to - note or pitch class\n * @param {String} from - note or pitch class\n */\nexport function fifths(from, to) {\n  if (arguments.length === 1) { return function (to) { return fifths(from, to); }; }\n  var f = encodeNote(from);\n  var t = encodeNote(to);\n  if (t === null || f === null) { return null; }\n  return t[0] - f[0];\n}\n\n/**\n * The same as transpose with the arguments inverted.\n *\n * Can be partially applied.\n *\n * @param {String} note\n * @param {String} interval\n * @return {String} the transposed note\n * @example\n * import { tranposeBy } from \"tonal-distance\"\n * transposeBy(\"3m\", \"5P\") // => \"7m\"\n */\nexport function transposeBy(interval, note) {\n  if (arguments.length === 1) { return function (n) { return transpose(n, interval); }; }\n  return transpose(note, interval);\n}\n\nvar isDescending = function (e) { return e[0] * 7 + e[1] * 12 < 0; };\nvar decodeIvl = function (i) { return isDescending(i) ? decode(-i[0], -i[1], -1) : decode(i[0], i[1], 1); };\n\nexport function addIntervals(ivl1, ivl2, dir) {\n  var i1 = encodeIvl(ivl1);\n  var i2 = encodeIvl(ivl2);\n  if (i1 === null || i2 === null) { return null; }\n  var i = [i1[0] + dir * i2[0], i1[1] + dir * i2[1]];\n  return ibuild(decodeIvl(i));\n}\n\n/**\n * Add two intervals\n *\n * Can be partially applied.\n *\n * @param {String} interval1\n * @param {String} interval2\n * @return {String} the resulting interval\n * @example\n * import { add } from \"tonal-distance\"\n * add(\"3m\", \"5P\") // => \"7m\"\n */\nexport function add(ivl1, ivl2) {\n  if (arguments.length === 1) { return function (i2) { return add(ivl1, i2); }; }\n  return addIntervals(ivl1, ivl2, 1);\n}\n\n/**\n * Subtract two intervals\n *\n * Can be partially applied\n *\n * @param {String} minuend\n * @param {String} subtrahend\n * @return {String} interval diference\n */\nexport function subtract(ivl1, ivl2) {\n  if (arguments.length === 1) { return function (i2) { return add(ivl1, i2); }; }\n  return addIntervals(ivl1, ivl2, -1);\n}\n\n/**\n * Find the interval between two pitches. It works with pitch classes\n * (both must be pitch classes and the interval is always ascending)\n *\n * Can be partially applied\n *\n * @param {String} from - distance from\n * @param {String} to - distance to\n * @return {String} the interval distance\n *\n * @example\n * import { interval } from \"tonal-distance\"\n * interval(\"C2\", \"C3\") // => \"P8\"\n * interval(\"G\", \"B\") // => \"M3\"\n *\n * @example\n * import * as Distance from \"tonal-distance\"\n * Distance.interval(\"M2\", \"P5\") // => \"P4\"\n */\nexport function interval(from, to) {\n  if (arguments.length === 1) { return function (t) { return interval(from, t); }; }\n  var f = encodeNote(from);\n  var t = encodeNote(to);\n  if (f === null || t === null || f.length !== t.length) { return null; }\n  var d =\n    f.length === 1\n      ? [t[0] - f[0], -Math.floor(((t[0] - f[0]) * 7) / 12)]\n      : [t[0] - f[0], t[1] - f[1]];\n  return ibuild(decodeIvl(d));\n}\n\n/**\n * Get the distance between two notes in semitones\n *\n * @param {String|Pitch} from - first note\n * @param {String|Pitch} to - last note\n * @return {Integer} the distance in semitones or null if not valid notes\n * @example\n * import { semitones } from \"tonal-distance\"\n * semitones(\"C3\", \"A2\") // => -3\n * // or use tonal\n * Tonal.Distance.semitones(\"C3\", \"G3\") // => 7\n */\nexport function semitones(from, to) {\n  if (arguments.length === 1) { return function (t) { return semitones(from, t); }; }\n  var f = noteProps(from);\n  var t = noteProps(to);\n  return f.midi !== null && t.midi !== null\n    ? t.midi - f.midi\n    : f.chroma !== null && t.chroma !== null\n      ? (t.chroma - f.chroma + 12) % 12\n      : null;\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-pcset.svg?style=flat-square)](https://www.npmjs.com/package/tonal-pcset)\n * [![tonal](https://img.shields.io/badge/tonal-pcset-yellow.svg?style=flat-square)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-pcset` is a collection of functions to work with pitch class sets, oriented\n * to make comparations (isEqual, isSubset, isSuperset)\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * You can install via npm: `npm i --save tonal-pcset`\n *\n * ```js\n * // es6\n * import PcSet from \"tonal-pcset\"\n * var PcSet = require(\"tonal-pcset\")\n *\n * PcSet.isEqual(\"c2 d5 e6\", \"c6 e3 d1\") // => true\n * ```\n *\n * ## API documentation\n *\n * @module PcSet\n */\nimport { chroma as notechr } from \"tonal-note\";\nimport { chroma as ivlchr } from \"tonal-interval\";\nimport { rotate, range, compact } from \"tonal-array\";\n\nvar chr = function (str) { return notechr(str) || ivlchr(str) || 0; };\nvar pcsetNum = function (set) { return parseInt(chroma(set), 2); };\nvar clen = function (chroma) { return chroma.replace(/0/g, \"\").length; };\n\n/**\n * Get chroma of a pitch class set. A chroma identifies each set uniquely.\n * It\"s a 12-digit binary each presenting one semitone of the octave.\n *\n * Note that this function accepts a chroma as parameter and return it\n * without modification.\n *\n * @param {Array|String} set - the pitch class set\n * @return {String} a binary representation of the pitch class set\n * @example\n * PcSet.chroma([\"C\", \"D\", \"E\"]) // => \"1010100000000\"\n */\nexport function chroma(set) {\n  if (isChroma(set)) { return set; }\n  if (!Array.isArray(set)) { return \"\"; }\n  var b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  set.map(chr).forEach(function (i) {\n    b[i] = 1;\n  });\n  return b.join(\"\");\n}\n\nvar all = null;\n/**\n * Get a list of all possible chromas (all possible scales)\n * More information: http://allthescales.org/\n * @return {Array} an array of possible chromas from '10000000000' to '11111111111'\n *\n */\nexport function chromas(n) {\n  all = all || range(2048, 4095).map(function (n) { return n.toString(2); });\n  return typeof n === \"number\"\n    ? all.filter(function (chroma) { return clen(chroma) === n; })\n    : all.slice();\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|String} set - the list of notes or pitchChr of the set\n * @param {Boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<String>} an array with all the modes of the chroma\n *\n * @example\n * PcSet.modes([\"C\", \"D\", \"E\"]).map(PcSet.intervals)\n */\nexport function modes(set, normalize) {\n  normalize = normalize !== false;\n  var binary = chroma(set).split(\"\");\n  return compact(\n    binary.map(function(_, i) {\n      var r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\nvar REGEX = /^[01]{12}$/;\n/**\n * Test if the given string is a pitch class set chroma.\n * @param {String} chroma - the pitch class set chroma\n * @return {Boolean} true if its a valid pcset chroma\n * @example\n * PcSet.isChroma(\"101010101010\") // => true\n * PcSet.isChroma(\"101001\") // => false\n */\nexport function isChroma(set) {\n  return REGEX.test(set);\n}\n\nvar IVLS = \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\".split(\" \");\n/**\n * Given a pcset (notes or chroma) return it\"s intervals\n * @param {String|Array} pcset - the pitch class set (notes or chroma)\n * @return {Array} intervals or empty array if not valid pcset\n * @example\n * PcSet.intervals(\"1010100000000\") => [\"1P\", \"2M\", \"3M\"]\n */\nexport function intervals(set) {\n  if (!isChroma(set)) { return []; }\n  return compact(\n    set.split(\"\").map(function(d, i) {\n      return d === \"1\" ? IVLS[i] : null;\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are identical\n *\n * @param {Array|String} set1 - one of the pitch class sets\n * @param {Array|String} set2 - the other pitch class set\n * @return {Boolean} true if they are equal\n * @example\n * PcSet.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1, s2) {\n  if (arguments.length === 1) { return function (s) { return isEqual(s1, s); }; }\n  return chroma(s1) === chroma(s2);\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function can be partially applied\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a subset of set, false otherwise\n * @example\n * const inCMajor = PcSet.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set, notes) {\n  if (arguments.length > 1) { return isSubsetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes & set) === notes;\n  };\n}\n\n/**\n * Create a function that test if a collectio of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a superset of set, false otherwise\n * @example\n * const extendsCMajor = PcSet.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set, notes) {\n  if (arguments.length > 1) { return isSupersetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes | set) === notes;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n * @param {Array|String} set - the base set to test against\n * @param {String|Pitch} note - the note to test\n * @return {Boolean} true if the note is included in the pcset\n * @example\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C4\") // => true\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C#4\") // => false\n */\nexport function includes(set, note) {\n  if (arguments.length > 1) { return includes(set)(note); }\n  set = chroma(set);\n  return function(note) {\n    return set[chr(note)] === \"1\";\n  };\n}\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|String} set - the pitch class set notes\n * @param {Array|String} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * PcSet.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * PcSet.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set, notes) {\n  if (arguments.length === 1) { return function (n) { return filter(set, n); }; }\n  return notes.filter(includes(set));\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-scale.svg?style=flat-square)](https://www.npmjs.com/package/tonal-scale)\n *\n * A scale is a collection of pitches in ascending or descending order.\n *\n * This module provides functions to get and manipulate scales.\n *\n * @example\n * // es6\n * import * as Scale from \"tonal-scale\"\n * // es5\n * const Scale = require(\"tonal-scale\");\n *\n * @example\n * Scale.notes(\"Ab bebop\") // => [ \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"G\" ]\n * Scale.names() => [\"major\", \"minor\", ...]\n * @module Scale\n */\nimport { name as noteName, pc } from \"tonal-note\";\nimport {\n  modes as pcsetModes,\n  chroma,\n  isSubsetOf,\n  isSupersetOf\n} from \"tonal-pcset\";\nimport { transpose } from \"tonal-distance\";\nimport { scale, chord } from \"tonal-dictionary\";\nimport { compact, unique, rotate } from \"tonal-array\";\n\nvar NO_SCALE = Object.freeze({\n  name: null,\n  intervals: [],\n  names: [],\n  chroma: null,\n  setnum: null\n});\n\nvar properties = function (name) {\n  var intervals = scale(name);\n  if (!intervals) { return NO_SCALE; }\n  var s = { intervals: intervals, name: name };\n  s.chroma = chroma(intervals);\n  s.setnum = parseInt(s.chroma, 2);\n  s.names = scale.names(s.chroma);\n  return Object.freeze(s);\n};\n\nvar memoize = function (fn, cache) { return function (str) { return cache[str] || (cache[str] = fn(str)); }; };\n\n/**\n * Get scale properties. It returns an object with:\n * - name: the scale name\n * - names: a list with all possible names (includes the current)\n * - intervals: an array with the scale intervals\n * - chroma:  scale croma (see pcset)\n * - setnum: scale chroma number\n *\n * @function\n * @param {String} name - the scale name (without tonic)\n * @return {Object}\n */\nexport var props = memoize(properties, {});\n\n/**\n * Return the available scale names\n *\n * @function\n * @param {boolean} aliases - true to include aliases\n * @return {Array} the scale names\n *\n * @example\n * Scale.names() // => [\"maj7\", ...]\n */\nexport var names = scale.names;\n\n/**\n * Given a scale name, return its intervals. The name can be the type and\n * optionally the tonic (which is ignored)\n *\n * It retruns an empty array when no scale found\n *\n * @function\n * @param {String} name - the scale name (tonic and type, tonic is optional)\n * @return {Array<String>} the scale intervals if is a known scale or an empty\n * array if no scale found\n * @example\n * Scale.intervals(\"major\") // => [ \"1P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\" ]\n */\nexport var intervals = function (name) {\n  var p = tokenize(name);\n  return props(p[1]).intervals;\n};\n\n/**\n * Get the notes (pitch classes) of a scale.\n *\n * Note that it always returns an array, and the values are only pitch classes.\n *\n * @function\n * @param {String} tonic\n * @param {String} nameOrTonic - the scale name or tonic (if 2nd param)\n * @param {String} [name] - the scale name without tonic\n * @return {Array} a pitch classes array\n *\n * @example\n * Scale.notes(\"C\", \"major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"C major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"C4\", \"major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"A4\", \"no-scale\") // => []\n * Scale.notes(\"blah\", \"major\") // => []\n */\nexport function notes(nameOrTonic, name) {\n  var p = tokenize(nameOrTonic);\n  name = name || p[1];\n  return intervals(name).map(transpose(p[0]));\n}\n\n/**\n * Check if the given name is a known scale from the scales dictionary\n *\n * @function\n * @param {String} name - the scale name\n * @return {Boolean}\n */\nexport function exists(name) {\n  var p = tokenize(name);\n  return scale(p[1]) !== undefined;\n}\n\n/**\n * Given a string with a scale name and (optionally) a tonic, split\n * that components.\n *\n * It retuns an array with the form [ name, tonic ] where tonic can be a\n * note name or null and name can be any arbitrary string\n * (this function doesn\"t check if that scale name exists)\n *\n * @function\n * @param {String} name - the scale name\n * @return {Array} an array [tonic, name]\n * @example\n * Scale.tokenize(\"C mixolydean\") // => [\"C\", \"mixolydean\"]\n * Scale.tokenize(\"anything is valid\") // => [\"\", \"anything is valid\"]\n * Scale.tokenize() // => [\"\", \"\"]\n */\nexport function tokenize(str) {\n  if (typeof str !== \"string\") { return [\"\", \"\"]; }\n  var i = str.indexOf(\" \");\n  var tonic = noteName(str.substring(0, i)) || noteName(str) || \"\";\n  var name = tonic !== \"\" ? str.substring(tonic.length + 1) : str;\n  return [tonic, name.length ? name : \"\"];\n}\n\n/**\n * Find mode names of a scale\n *\n * @function\n * @param {String} name - scale name\n */\nexport var modeNames = function (name) {\n  var ivls = intervals(name);\n  var tonics = notes(name);\n\n  return pcsetModes(ivls)\n    .map(function (chroma, i) {\n      var name = scale.names(chroma)[0];\n      if (name) { return [tonics[i] || ivls[i], name]; }\n    })\n    .filter(function (x) { return x; });\n};\n\n/**\n * Get all chords that fits a given scale\n *\n * @function\n * @param {String} name\n */\nexport var chords = function (name) {\n  var inScale = isSubsetOf(intervals(name));\n  return chord.names().filter(function (name) { return inScale(chord(name)); });\n};\n\n/**\n * Given an array of notes, return the scale: a pitch class set starting from\n * the first note of the array\n *\n * @function\n * @param {Array} notes\n * @return {Array}\n */\nexport var toScale = function (notes) {\n  var pcset = compact(notes.map(pc));\n  if (!pcset.length) { return pcset; }\n  var tonic = pcset[0];\n  var scale = unique(pcset);\n  return rotate(scale.indexOf(tonic), scale);\n};\n\n/**\n * Get all scales names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of scale names\n */\nexport var supersets = function (name) {\n  if (!intervals(name).length) { return []; }\n  var isSuperset = isSupersetOf(intervals(name));\n  return scale.names().filter(function (name) { return isSuperset(scale(name)); });\n};\n\n/**\n * Find all scales names that are a subset of the given one\n * (has less notes but all from the given scale)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of scale names\n */\nexport var subsets = function (name) {\n  var isSubset = isSubsetOf(intervals(name));\n  return scale.names().filter(function (name) { return isSubset(scale(name)); });\n};\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-chord.svg)](https://www.npmjs.com/package/tonal-chord)\n * [![tonal](https://img.shields.io/badge/tonal-chord-yellow.svg)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-chord` is a collection of functions to manipulate musical chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Chord from \"tonal-chord\"\n * // es5\n * const Chord = require(\"tonal-chord\")\n *\n * @example\n * Chord.notes(\"CMaj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n *\n * @module Chord\n */\nimport { tokenize as split } from \"tonal-note\";\nimport { transpose } from \"tonal-distance\";\nimport { chord } from \"tonal-dictionary\";\nimport { chroma, isSubsetOf, isSupersetOf } from \"tonal-pcset\";\n\n/**\n * Return the available chord names\n *\n * @function\n * @param {boolean} aliases - true to include aliases\n * @return {Array} the chord names\n *\n * @example\n * Chord.names() // => [\"maj7\", ...]\n */\nexport var names = chord.names;\n\nvar NO_CHORD = Object.freeze({\n  name: null,\n  names: [],\n  intervals: [],\n  chroma: null,\n  setnum: null\n});\n\nvar properties = function (name) {\n  var intervals = chord(name);\n  if (!intervals) { return NO_CHORD; }\n  var s = { intervals: intervals, name: name };\n  s.chroma = chroma(intervals);\n  s.setnum = parseInt(s.chroma, 2);\n  s.names = chord.names(s.chroma);\n  return s;\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\n/**\n * Get chord properties. It returns an object with:\n *\n * - name: the chord name\n * - names: a list with all possible names (includes the current)\n * - intervals: an array with the chord intervals\n * - chroma:  chord croma (see pcset)\n * - setnum: chord chroma number\n *\n * @function\n * @param {String} name - the chord name (without tonic)\n * @return {Object} an object with the properties or a object with all properties\n * set to null if not valid chord name\n */\nexport var props = memo(properties);\n\n/**\n * Get chord intervals. It always returns an array\n *\n * @function\n * @param {String} name - the chord name (optionally a tonic and type)\n * @return {Array<String>} a list of intervals or null if the type is not known\n */\nexport var intervals = function (name) { return props(tokenize(name)[1]).intervals; };\n\n/**\n * Get the chord notes of a chord. This function accepts either a chord name\n * (for example: \"Cmaj7\") or a list of notes.\n *\n * It always returns an array, even if the chord is not found.\n *\n * @function\n * @param {String} nameOrTonic - name of the chord or the tonic (if the second parameter is present)\n * @param {String} [name] - (Optional) name if the first parameter is the tonic\n * @return {Array} an array of notes or an empty array\n *\n * @example\n * Chord.notes(\"Cmaj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n * Chord.notes(\"C\", \"maj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n */\nexport function notes(nameOrTonic, name) {\n  if (name) { return props(name).intervals.map(transpose(nameOrTonic)); }\n  var ref = tokenize(nameOrTonic);\n  var tonic = ref[0];\n  var type = ref[1];\n  return props(type).intervals.map(transpose(tonic));\n}\n\n/**\n * Check if a given name correspond to a chord in the dictionary\n *\n * @function\n * @param {String} name\n * @return {Boolean}\n * @example\n * Chord.exists(\"CMaj7\") // => true\n * Chord.exists(\"Maj7\") // => true\n * Chord.exists(\"Ablah\") // => false\n */\nexport var exists = function (name) { return chord(tokenize(name)[1]) !== undefined; };\n\n/**\n * Get all chords names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of chord names\n */\nexport var supersets = function (name) {\n  if (!intervals(name).length) { return []; }\n  var isSuperset = isSupersetOf(intervals(name));\n  return chord.names().filter(function (name) { return isSuperset(chord(name)); });\n};\n\n/**\n * Find all chords names that are a subset of the given one\n * (has less notes but all from the given chord)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of chord names\n */\nexport var subsets = function (name) {\n  var isSubset = isSubsetOf(intervals(name));\n  return chord.names().filter(function (name) { return isSubset(chord(name)); });\n};\n\n// 6, 64, 7, 9, 11 and 13 are consider part of the chord\n// (see https://github.com/danigb/tonal/issues/55)\nvar NUM_TYPES = /^(6|64|7|9|11|13)$/;\n/**\n * Tokenize a chord name. It returns an array with the tonic and chord type\n * If not tonic is found, all the name is considered the chord name.\n *\n * This function does NOT check if the chord type exists or not. It only tries\n * to split the tonic and chord type.\n *\n * @function\n * @param {String} name - the chord name\n * @return {Array} an array with [type, tonic]\n * @example\n * Chord.tokenize(\"Cmaj7\") // => [ \"C\", \"maj7\" ]\n * Chord.tokenize(\"C7\") // => [ \"C\", \"7\" ]\n * Chord.tokenize(\"mMaj7\") // => [ \"\", \"mMaj7\" ]\n * Chord.tokenize(\"Cnonsense\") // => [ \"C\", \"nonsense\" ]\n */\nexport function tokenize(name) {\n  var p = split(name);\n  if (p[0] === \"\") { return [\"\", name]; }\n  // aug is augmented (see https://github.com/danigb/tonal/issues/55)\n  if (p[0] === \"A\" && p[3] === \"ug\") { return [\"\", \"aug\"]; }\n\n  if (NUM_TYPES.test(p[2])) {\n    return [p[0] + p[1], p[2] + p[3]];\n  } else {\n    return [p[0] + p[1] + p[2], p[3]];\n  }\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-dictionary.svg)](https://www.npmjs.com/package/tonal-dictionary)\n *\n * `tonal-dictionary` contains a dictionary of musical scales and chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Dictionary from \"tonal-dictionary\"\n * // es5\n * const Dictionary = require(\"tonal-dictionary\")\n *\n * @example\n * Dictionary.chord(\"Maj7\") // => [\"1P\", \"3M\", \"5P\", \"7M\"]\n *\n * @module Dictionary\n */\nimport sdata from \"./data/scales.json\";\nimport cdata from \"./data/chords.json\";\nimport { chroma } from \"tonal-pcset\";\n\nexport var dictionary = function (raw) {\n  var keys = Object.keys(raw).sort();\n  var data = [];\n  var index = [];\n\n  var add = function (name, ivls, chroma) {\n    data[name] = ivls;\n    index[chroma] = index[chroma] || [];\n    index[chroma].push(name);\n  };\n\n  keys.forEach(function (key) {\n    var ivls = raw[key][0].split(\" \");\n    var alias = raw[key][1];\n    var chr = chroma(ivls);\n\n    add(key, ivls, chr);\n    if (alias) { alias.forEach(function (a) { return add(a, ivls, chr); }); }\n  });\n  var allKeys = Object.keys(data).sort();\n\n  var dict = function (name) { return data[name]; };\n  dict.names = function (p) {\n    if (typeof p === \"string\") { return (index[p] || []).slice(); }\n    else { return (p === true ? allKeys : keys).slice(); }\n  };\n  return dict;\n};\n\nexport var combine = function (a, b) {\n  var dict = function (name) { return a(name) || b(name); };\n  dict.names = function (p) { return a.names(p).concat(b.names(p)); };\n  return dict;\n};\n\n/**\n * A dictionary of scales: a function that given a scale name (without tonic)\n * returns an array of intervals\n *\n * @function\n * @param {String} name\n * @return {Array} intervals\n * @example\n * import { scale } from \"tonal-dictionary\"\n * scale(\"major\") // => [\"1P\", \"2M\", ...]\n * scale.names(); // => [\"major\", ...]\n */\nexport var scale = dictionary(sdata);\n\n/**\n * A dictionary of chords: a function that given a chord type\n * returns an array of intervals\n *\n * @function\n * @param {String} type\n * @return {Array} intervals\n * @example\n * import { chord } from \"tonal-dictionary\"\n * chord(\"Maj7\") // => [\"1P\", \"3M\", ...]\n * chord.names(); // => [\"Maj3\", ...]\n */\nexport var chord = dictionary(cdata);\nexport var pcset = combine(scale, chord);\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-key.svg?style=flat-square)](https://www.npmjs.com/package/tonal-key)\n *\n * The `Tonal` module is a facade to the rest of the modules. They are namespaced,\n * so for example to use `pc` function from `tonal-note` you have to write:\n * `Tonal.Note.pc`\n *\n * It exports the following modules:\n * - Note\n * - Interval\n * - Distance\n * - Scale\n * - Chord\n * - PcSet\n *\n * Additionally this facade exports some functions without namespace (see \"Methods\" below)\n *\n * @example\n * // es6 modules\n * import * as Tonal from \"tonal\"\n * Tonal.Note.name(\"cx\") // => \"C##\"\n *\n * @example\n * import { Note } from \"tonal\"\n * Note.name(\"bb\") // => \"Bb\"\n *\n * @example\n * // es5 node modules\n * var Tonal = require(\"tonal\");\n * Tonal.Distance.transpose(Tonal.Note.pc(\"C#2\"), \"M3\") // => \"E#\"\n * Tonal.Chord.notes(\"Dmaj7\") // => [\"D\", \"F#\", \"A\", \"C#\"]\n *\n * @module Tonal\n */\nimport * as Array from \"tonal-array\";\nimport * as Note from \"tonal-note\";\nimport * as Interval from \"tonal-interval\";\nimport * as Distance from \"tonal-distance\";\nimport * as Dictionary from \"tonal-dictionary\";\nimport * as Scale from \"tonal-scale\";\nimport * as Chord from \"tonal-chord\";\nimport * as PcSet from \"tonal-pcset\";\n\nexport { Array, Note, Interval, Distance, Scale, Chord, PcSet, Dictionary };\n\n/**\n * Transpose a note by an interval\n * @function\n * @param {String} note\n * @param {String} interval\n * @return {String} the transported note\n * @see Distance.transpose\n */\nexport const transpose = Distance.transpose;\n\n/**\n * Get the interval from two notes\n * @function\n * @param {String} from\n * @param {String} to\n * @return {String} the interval in reverse shorthand notation\n * @see Distance.interval\n */\nexport const interval = Distance.interval;\n\n/**\n * Get note properties\n * @function\n * @param {String} note - the note name\n * @return {Object}\n * @see Note.props\n * @example\n * Tonal.note(\"A4\").chroma // => 9\n */\nexport const note = Note.props;\n\n/**\n * Get midi note number\n * @function\n * @param {String} note\n * @return {Number}\n * @see Note.midi\n * @example\n * Tonal.midi(\"A4\") // => 49\n */\nexport const midi = Note.midi;\n\n/**\n * Get note frequency using equal tempered tuning at 440\n * @function\n * @param {String} note\n * @return {Number}\n * @see Note.freq\n * @example\n * Tonal.freq(\"A4\") // => 440\n */\nexport const freq = Note.freq;\n\n/**\n * Get intervals from a chord type\n * @function\n * @param {String} type - the chord type (no tonic)\n * @return {Array} an array of intervals or undefined if the chord type is not known\n * @see Dictionary.chord\n * @example\n * Tonal.chord(\"m7b5\") // => [\"1P\", \"3m\", \"5d\", \"7m\"]\n */\nexport const chord = Dictionary.chord;\n\n/**\n * Get intervals from scale name\n * @function\n * @param {String} name - the scale name (without tonic)\n * @return {Array} an array of intervals or undefiend if the scale is not kown\n * @example\n * Tonal.scale(\"major\") // => [\"1P\", \"2M\", \"3M\"...]\n */\nexport const scale = Dictionary.scale;\n","export var dizionario = {\n  \"Cmaj7\": [\"C\",\"E\",\"G\",\"B\"],     //majors\n  \"C#maj7\": [\"C#\",\"F\",\"G#\",\"C\"],\n  \"Dmaj7\": [\"D\",\"F#\",\"A\",\"C#\"],\n  \"D#maj7\": [\"D#\",\"G\",\"A#\",\"D\"],\n  \"Emaj7\": [\"E\",\"G#\",\"B\",\"D#\"],\n  \"Fmaj7\": [\"F\",\"A\",\"C\",\"E\"],\n  \"F#maj7\": [\"F#\",\"A#\",\"C#\",\"F\"],\n  \"Gmaj7\": [\"G\",\"B\",\"D\",\"F#\"],\n  \"G#maj7\": [\"G#\",\"C\",\"D#\",\"G\"],\n  \"Amaj7\": [\"A\",\"C#\",\"E\",\"G#\"],\n  \"A#maj7\": [\"A#\",\"D\",\"F\",\"A\"],\n  \"Bmaj7\": [\"B\",\"D#\",\"F#\",\"A#\"],\n  \"Cm7\": [\"C\",\"D#\",\"G\",\"A#\"],     //minors\n  \"C#m7\": [\"C#\",\"E\",\"G#\",\"B\"],\n  \"Dm7\": [\"D\",\"F\",\"A\",\"C\"],\n  \"D#m7\": [\"D#\",\"F#\",\"A#\",\"C#\"],\n  \"Em7\": [\"E\",\"G\",\"B\",\"D\"],\n  \"Fm7\": [\"F\",\"G#\",\"C\",\"D#\"],\n  \"F#m7\": [\"F#\",\"A\",\"C#\",\"E\"],\n  \"Gm7\": [\"G\",\"A#\",\"D\",\"F\"],\n  \"G#m7\": [\"G#\",\"B\",\"D#\",\"F#\"],\n  \"Am7\": [\"A\",\"C\",\"E\",\"G\"],\n  \"A#m7\": [\"A#\",\"C#\",\"F\",\"G#\"],\n  \"Bm7\": [\"B\",\"D\",\"F#\",\"A\"],\n  \"C7\": [\"C\",\"E\",\"G\",\"A#\"],           //dominant 7th\n  \"C#7\": [\"C#\",\"F\",\"G#\",\"B\"],\n  \"D7\": [\"D\",\"F#\",\"A\",\"C\"],\n  \"D#7\": [\"D#\",\"G\",\"A#\",\"C#\"],\n  \"E7\": [\"E\",\"G#\",\"B\",\"D\"],\n  \"F7\": [\"F\",\"A\",\"C\",\"D#\"],\n  \"F#7\": [\"F#\",\"A#\",\"C#\",\"E\"],\n  \"G7\": [\"G\",\"B\",\"D\",\"F\"],\n  \"G#7\": [\"G#\",\"C\",\"D#\",\"F#\"],\n  \"A7\": [\"A\",\"C#\",\"E\",\"G\"],\n  \"A#7\": [\"A#\",\"D\",\"F\",\"G#\"],\n  \"B7\": [\"B\",\"D#\",\"F#\",\"A\"],\n\n\n  \"Csemi\":[\"C\",\"D#\",\"F#\", \"A#\"],       //semidiminished\n  \"C#semi\":[\"C\",\"E\",\"G\", \"B\"],\n  \"Dsemi\":[\"D\",\"F\",\"G#\",\"C\"],\n  \"D#semi\":[\"D#\",\"F#\",\"A\",\"C#\"],\n  \"Esemi\":[\"E\",\"G\",\"A#\", \"D\"],\n  \"Fsemi\":[\"F\",\"G#\",\"B\",\"D#\"],\n  \"F#semi\":[\"F#\",\"A\",\"C\",\"E\"],\n  \"Gsemi\":[\"G\",\"A#\",\"C#\", \"F\"],\n  \"G#semi\":[\"G#\",\"B\",\"D\", \"F#\"],\n  \"Asemi\":[\"A\",\"C\",\"D#\", \"G\"],\n  \"A#semi\":[\"A#\",\"C#\",\"E\", \"G#\"],\n  \"Bsemi\":[\"B\",\"D\",\"F\", \"A\"],\n\n\n};\n","//AGGIORNAMENTO: ALLO STATO ATTUALE IL CODICE FUNZIONA ANCHE CON UNA TASTIERA MIDI, TESTATO E FUNZIONANTE\nvar key= \"q2w3er5t6y7uzsxdcvgbhnjm\"\nvar midi;\nvar c = new AudioContext();\nvar analyser = c.createAnalyser();\nvar volume_master= c.createGain();\n\nvolume_master.connect(c.destination);\n\n\n\nanalyser.fftSize=2048;\nvar bufferLength = analyser.frequencyBinCount;\nvar dataArray = new Uint8Array(bufferLength);\n\n\nvar gain_vec= [];\nvar chord_;         //VARIABILE CHE IDENTIFICA UN SINGOLO ACCORDO E CHE VIENE SOVRASCRITTA OGNI VOLTA\nvar chords_vec=[];  //VETTORE DI ACCORDI\nvar midi_vec=[];    //VETTORE DI NUMERI MIDI (PER GESTIRE I RIVOLTI)\nvar note_vec=[];    //VETTORE DI NOTE (PER IL RICONOSCIMENTO DELL'ACCORDO)\nvar collect_note=[[]];  //VETTORE CONTENTE VETTORI DI NOTE\nvar collect_midi= [[]]; //VETTORE CONTENENTE VETTORI DI NUMERI MIDI (IDEA PER LOOP MAYBE)\nvar i=0;\nimport { chord } from \"./tonal/extensions/detect/index.js\";\nimport { Note, Chord } from \"./tonal\";\nimport {canvas, ctx, my_gradient, blink } from \"./canvas.js\";\nimport {canvas  as canvas2, reset_canvas2,split_array} from \"./canvas_progression.js\";\nimport {ctx as ctx2}  from \"./canvas_progression.js\";\nimport {circle, key_, findKey,degree} from \"./circleFifth.js\";\nvar counter = new Array(circle.length).fill(0);\nvar octave_step=0;\nvar color_chord= [];\n var maj_scale= [2,2,1,2,2,2,1];\n export var scale_maj=[];\n var chromatic_scale=[\"C\",\"Db/C#\",\"D\",\"Eb\",\"E\",\"F\",\"Gb/F#\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\"];\nvar change_scale=0;\n\n//--------------FUNCTION FOR THE DICTIONARY---------------------------------------------------------------------//\nvar canvas3=document.querySelector(\"#canvas3\");\nvar context = canvas3.getContext(\"2d\");\nimport {dizionario as dict}  from \"./dizionario.js\"\n//var getKey = (obj,val) => Object.keys(obj).find(key => obj[key].length === val.length && obj[key].every((kn) => val.includes(kn)));\n\nfunction getKey(obj, arr) {\n\n  // Grab the key from the first object that satisfies the condition...\n  const [ key ] = Object.entries(obj).find(([key, notes]) => {\n\n    // ...that all the notes in the object are included in the\n    // array that was passed in. As long as the notes array and the\n    // query array are the same length, the notes can be in any order\n    return arr.length === notes.length && arr.every(note => notes.includes(note));\n  });\n\n  // Return that key\n  return key;\n}\n\n//console.log(dict[\"Dmaj7\"])\n//console.log(getKey(dict,[\"C\",\"E\",\"G\",\"B\"]));\n\n\n//------------------------------------------------------------------------------------------------------------------//\n\n\nfunction render(vec,key){\n  //console.log(key);\n  var y= document.getElementsByClassName(\"Key\");\n  var x = document.getElementsByClassName(\"chord\");\n  x[i].innerHTML = vec[i];\n  x[i].style.color = \"#14fdce\";\n  x[i].style.textAlign = \"center\";\n  x[i].style.top= \"50px\";\n  x[i].style.fontWeight = \"900\";\n  x[i].style.verticalAlign = 'middle';\n  x[i].style.fontFamily = 'Prompt';\n  if(chords_vec.length==4){\n    y[0].innerHTML = key;\n    y[0].style.color = \"#14fdce\";\n    y[0].style.textAlign = \"center\";\n    y[0].style.top= \"50px\";\n    y[0].style.fontWeight = \"900\";\n    y[0].style.verticalAlign = 'middle';\n    y[0].style.fontFamily = 'Prompt';\n  }\n  note_vec=[];\n  midi_vec=[];\n  chord_=null;\n  i=i+1;\n\n}\n\n\n//FUNZIONE DI TIMEOUT SE NON VIENE PREMUTA SUBITO UN'ALTRA NOTA------------------------//\n\n\nfunction timeOut(){\n  note_vec=[];\n  midi_vec=[];\n}\n\n//-----------------------FUNZIONE MOSTRA TASTI DELLA TASTIERA-----------------------//\n\ndocument.getElementById(\"button\").onclick= function(){\n  for(var i=0; i<key.length; i++){\n  document.getElementsByClassName(\"keyboard\")[i].classList.toggle(\"keyboard_grey\");\n}\n}\n//--------------------------VOLUME MASTER HANDLER---------------------------------//\ndocument.getElementById(\"slider\").addEventListener(\"input\", changeVol);\n\nfunction changeVol(){\n  volume_master.gain.value= parseFloat(document.getElementById(\"slider\").value);\n  console.log(volume_master.gain.value);\n\n}\n//-------------------------FUNZIONE DI RESET--------------------------------------//\n\n\ndocument.getElementById(\"reset\").onclick= function(){\n  for(var j=0; j<chords_vec.length; j++){\n  var x = document.getElementsByClassName(\"chord\");\n  x[j].innerHTML = \"\";\n}\ndocument.getElementsByClassName(\"Key\")[0].innerHTML= \"\";\n  i=0;\n  chords_vec=[];\n  counter.fill(0);\n  console.log(chords_vec);\n  color_chord=[];\n  ctx.clearRect(0,0,canvas.width,canvas.height);\n  ctx2.clearRect(0,0,canvas2.width,canvas2.height);\n  reset_canvas2();\n    scale_maj=[];\n}\n\n//console.log($(\"#highlight\").position().left/ $(\"#highlight\").parent().width() * 100);\n\n\n\n//----------------------------OCTAVE CHANGES....................................//\n$(document).ready(function() {\n    $('#min_oct').click(function() {\n\n\n      octave_step= octave_step-12;\n\n      if(octave_step<-36){                  //controllo che impedisce l'aumento dell'ottava anche se il riquadro sta fermo\n        octave_step=-36;\n      }\n      console.log(octave_step);\n\n      switch(octave_step){\n        case 12: document.getElementById(\"C-first\").innerHTML= \"C5\";\n                document.getElementById(\"C-second\").innerHTML= \"C6\";\n                break;\n\n        case 0: document.getElementById(\"C-first\").innerHTML= \"C4\";\n                document.getElementById(\"C-second\").innerHTML= \"C5\";\n                break;\n        case -12: document.getElementById(\"C-first\").innerHTML= \"C3\";\n                document.getElementById(\"C-second\").innerHTML= \"C4\";\n                break;\n        case -24: document.getElementById(\"C-first\").innerHTML=\"C2\";\n                  document.getElementById(\"C-second\").innerHTML=\"C3\";\n                  break;\n        case -36: document.getElementById(\"C-first\").innerHTML=\"C1\";\n                  document.getElementById(\"C-second\").innerHTML=\"C2\";\n                  break;\n      }\n\n      var containerWidth = $(\".mini_keyboard\").width();\n      var left = parseFloat($('.highlighted').css('left'));\n      //console.log(left);\n      var step = (containerWidth * 0.145);\n      if(left < step){\n        $('.highlighted').css('left',left);\n      }\n      else{\n        left= left - step;\n        $('.highlighted').css('left',left);\n      }\n    });\n});\n\n$(document).ready(function() {\n    $('#plus_oct').click(function() {\n\n\n\n      if(octave_step==24){                //controllo che impedisce l'aumento dell'ottava anche se il riquadro sta fermo\n        octave_step=octave_step-12;\n      }\n        octave_step= octave_step+12;\n      console.log(octave_step);\n\n      switch(octave_step){\n        case 0: document.getElementById(\"C-first\").innerHTML= \"C4\";\n                document.getElementById(\"C-second\").innerHTML= \"C5\";\n                break;\n        case 12: document.getElementById(\"C-first\").innerHTML= \"C5\";\n                document.getElementById(\"C-second\").innerHTML= \"C6\";\n                break;\n        case 24: document.getElementById(\"C-first\").innerHTML= \"C6\";\n                document.getElementById(\"C-second\").innerHTML= \"C7\";\n                break;\n                case -24: document.getElementById(\"C-first\").innerHTML=\"C2\";\n                          document.getElementById(\"C-second\").innerHTML=\"C3\";\n                          break;\n                          case -12: document.getElementById(\"C-first\").innerHTML= \"C3\";\n                                  document.getElementById(\"C-second\").innerHTML= \"C4\";\n                                  break;\n      }\n\n      var containerWidth = $(\".mini_keyboard\").width();\n      var left = parseFloat($('.highlighted').css('left'));\n    //  console.log(left);\n      var step = (containerWidth * 0.145);\n      if(left > (containerWidth - (2*step))){\n        $('.highlighted').css('left',left);\n      }\n      else{\n        left = left + step;\n        $('.highlighted').css('left',left);\n      }\n    });\n});\n\n\n\n//--------------------------------------------------------------------------------//\ndocument.onkeydown = function(e) {\n  if(!e.repeat){\n//  console.log(\"Hai premuto\", key.indexOf(e.key) )\n  var keypressed=key.indexOf(e.key)\n//  console.log(keypressed)\n  document.getElementById(keypressed).classList.toggle(\"clicked\");\n  playNote(Math.pow(2,(keypressed-9+octave_step)/12)*440, 144);\n  setTimeout(timeOut, 2000);\n   var midi_num = [keypressed+octave_step+60];\n   detect_chord (midi_num);\n  }\n}\n\n// -45,-33,-21,-9,3,15,27\ndocument.onkeyup= function(e) {\n  if(!e.repeat){\n//    console.log(\"Hai rilasciato\", key.indexOf(e.key) )\n  var keypressed=key.indexOf(e.key)\n  document.getElementById(keypressed).classList.toggle(\"clicked\");\n  playNote(Math.pow(2,(keypressed-9+octave_step)/12)*440,128);\n}\n}\n\n//GESTIONE TASTIERA MOUSECLICK\n//Sistemare il playNote al mouseclick\ndocument.querySelectorAll(\".rect_white\").forEach(toggleRect);\n\nfunction toggleRect(rect_white) {\n  rect_white.onmousedown = clickOnRect;\n  rect_white.onmouseup = clickOffRect;\n}\n\nfunction clickOnRect(data) {\n  //console.log(data)\n  var id = data.path[0].id;\n  document.getElementById(id).classList.toggle(\"clicked\");\n  playNote(Math.pow(2,((id)-9+octave_step)/12)*440, 144);\n}\nfunction clickOffRect(data) {\n  //console.log(data)\n  var id = data.path[0].id;\n  document.getElementById(id).classList.toggle(\"clicked\");\n  playNote(Math.pow(2,((id)-9+octave_step)/12)*440, 128);\n}\n\n//GESTIONE MIDI IN INGRESSO\nif (navigator.requestMIDIAccess) {\n    console.log('This browser supports WebMIDI!');\n    navigator.requestMIDIAccess().then(onMIDISuccess);\n  }\nelse {\n    console.log('WebMIDI is not supported in this browser.');\n}\n\n\nfunction onMIDISuccess(midiAccess) {\n    midi = midiAccess;\n  //  console.log(midi.inputs)\n    var allInputs = midi.inputs.values();\n  //loop attorno a tutti gli input per trovare qualsiasi MIDI input\n    for (var input = allInputs.next(); input && !input.done; input = allInputs.next()) {\n    // Quando ricevo un MIDI chiamo la funzione onMIDIMessage\n    input.value.onmidimessage = getMIDImessage;\n  }\n}\n\n\n\nfunction getMIDImessage(midiMessage){\n    var on_off = midiMessage.data[0];\n    var midi_number = midiMessage.data[1];\n    console.log(midi_number);\n    //console.log(on_off);\n    var f= Math.pow(2,(midi_number-69)/12)*440\n    document.getElementById(midi_number-60-octave_step).classList.toggle(\"clicked\");\n    playNote(f, on_off);\n    setTimeout(timeOut, 2000);\n    if(on_off==144){\n    detect_chord(midi_number);\n    }\n    else{\n       //midi_vec=[];\n    }\n}\n\n\n\nfunction playNote(freq,on_off){\n  switch(on_off){\n    case 144:\n\n              var o = c.createOscillator();\n              var g = c.createGain();\n              o.type=\"triangle\";\n              o.connect(g);\n              g.connect(volume_master);\n              volume_master.connect(analyser);\n              o.frequency.value = freq;\n              g.gain.value=0;\n              //g.gain.setValueAtTime(0, c.currentTime);\n              g.gain.linearRampToValueAtTime(1, c.currentTime+0.5); //Problematica: se il testo viene premuto e rilasciato subito, il suono continua all'infinito. AGGIUSTARE QUEST'ASPETTO\n              g.gain.linearRampToValueAtTime(0.6, c.currentTime+0.4);\n              o.start();\n              gain_vec[freq]=g;\n              drawSamples();\n              break;\n    case 128:\n              releaseNote(freq);\n              break;\n  }\n}\n\n\nfunction releaseNote(f){\n     gain_vec[f].gain.linearRampToValueAtTime(0, c.currentTime+0.5);\n}\n\n\n//-------------DETECTION CHORD FUNCTION-----------------//\n\n\nfunction detect_chord(midi_num){\n    midi_vec.push(midi_num);\n    note_vec.push(Note.pc(Note.fromMidi(midi_num, true)));\n  //  console.log(note_vec);\n  if(note_vec.length==4 && midi_vec.length==4 && chords_vec.length<4){\n      collect_midi.push(midi_vec);\n    //  console.log(collect_midi);\n      collect_note.push(note_vec);\n      var min_midi = Math.min.apply(Math, midi_vec)\n      var bass_note= Note.fromMidi(min_midi);\n      var accordo = getKey(dict,note_vec);\n      chord_=getKey(dict,note_vec)+\"/\"+bass_note;\n      chords_vec.push(chord_);\n      find_indexes(accordo);\n      blink(color_chord);\n      var chiave= findKey(accordo,counter,chords_vec);\n      console.log(chiave);\n      render(chords_vec,chiave);  //VISUALIZZA SULLO SCHERMO\n      scale(chiave);\n\n\n      console.log(chords_vec);\n\n  }\n}\n\nfunction find_indexes(chord) {\nfor(var i=0; i<circle.length; i++){\n   for(var j=0; j<circle[i].length; j++){\n       if(circle[i][j] == chord){\n          color_chord.push([i,j,0]);\n\n    //       console.log(\"found \" + chord + \" at (\" + i + \", \" + j + \")\");\n         }\n         }\n}\n   console.log(\"color chord\",color_chord);\n}\n\n\nfunction scale(key_arr){\n  var appoggio;\n  for(var j=0; j<key_arr.length; j++){\n  var arr=[];\n  var index_maj=chromatic_scale.indexOf(key_arr[j]);\n  if(chromatic_scale[index_maj].includes(\"#\")){\n    appoggio=chromatic_scale[index_maj].replace(\"/\",\"_\")\n    arr.push(appoggio.replace(\"#\",\"sharp\"));\n  }else{\n  arr.push(chromatic_scale[index_maj]);\n}\n      for(i=0; i<maj_scale.length; i++){\n        index_maj=index_maj+maj_scale[i];\n\n        if(index_maj>=chromatic_scale.length){\n          index_maj=index_maj%chromatic_scale.length;\n        }\n        console.log(index_maj);\n\n        if(chromatic_scale[index_maj].includes(\"#\")){\n          appoggio=chromatic_scale[index_maj].replace(\"/\",\"_\")\n          arr.push(appoggio.replace(\"#\",\"sharp\"));\n        }else{\n        arr.push(chromatic_scale[index_maj]);\n      }\n\n      }\n  scale_maj.push(arr);\n  console.log(scale_maj);\n  arr=[];\n  //    console.log(scale_min);\n  }\n\n  for(var i=0; i<scale_maj[change_scale].length;i++){\n         $(\"#\"+scale_maj[change_scale][i]).css(\"visibility\", \"visible\");\n    }\n  console.log(scale_maj);\n}\n\nfunction drawSamples(){\n  analyser.getByteFrequencyData(dataArray);\n  context.clearRect(0,0,canvas3.width, canvas3.height)\n  context.beginPath();\nfor(var i=0; i<canvas3.width;i++){\n  context.lineTo(dataArray[i],i);\n}\n  context.stroke();\n  context.strokeStyle = \"white\";\n  requestAnimationFrame(drawSamples)\n}\n","export var circle = [];\ncircle.push([\"Fmaj7\",\"Cmaj7\", \"G7\",\"Dm7\", \"Am7\",\"Em7\", \"Bsemi\"]);\ncircle.push([\"Cmaj7\",\"Gmaj7\", \"D7\",\"Am7\", \"Em7\",\"Bm7\", \"F#semi\"]);\ncircle.push([\"Gmaj7\",\"Dmaj7\", \"A7\",\"Em7\", \"Bm7\",\"F#m7\",  \"C#semi\"]);\ncircle.push([ \"Dmaj7\",\"Amaj7\",\"E7\",\"Bm7\", \"F#m7\",\"C#m7\",  \"G#semi\"]);\ncircle.push([ \"Amaj7\",\"Emaj7\", \"B7\",\"F#m7\",\"C#m7\",\"G#m7\",  \"D#semi\"]);\ncircle.push([\"Emaj7\",\"Bmaj7\",\"F#7\",\"C#m7\",\"G#m7\",\"D#m7\",    \"A#semi\"]);\ncircle.push([ \"Bmaj7\",\"F#maj7\",\"C#7\",\"G#m7\",\"D#m7\",\"A#m7\", \"Fsemi\"]);\ncircle.push([\"F#maj7\",\"C#maj7\",\"G#7\",\"D#m7\",\"A#m7\",\"Fm7\", \"Csemi\"]);\ncircle.push([\"C#maj7\",\"G#maj7\",  \"D#7\",\"A#m7\", \"Fm7\",\"Cm7\", \"Gsemi\"]);\ncircle.push([ \"G#maj7\",\"D#maj7\", \"A#7\",\"Fm7\",\"Cm7\",\"Gm7\",  \"Dsemi\"]);\ncircle.push([ \"D#maj7\",\"A#maj7\", \"F7\",\"Cm7\", \"Gm7\",\"Dm7\", \"Asemi\"]);\ncircle.push([\"A#maj7\",\"Fmaj7\", \"C7\",\"Gm7\",  \"Dm7\",\"Am7\", \"Esemi\"]);\nimport {stato,cancel_stato} from \"./canvas.js\";\nimport {canvas  as canvas2,show_progression,change_progression} from \"./canvas_progression.js\";\nimport {ctx as ctx2}  from \"./canvas_progression.js\";\nexport var key_ = [\"C\",\"G\",\"D\",\"A\",\"E\",\"B\",\"Gb/F#\",\"Db/C#\",\"Ab\",\"Eb\",\"Bb\",\"F\"];\nexport var degree= [];\nvar i=0;\nvar end=0;\nvar count;\nexport var flag=false;\nimport {scale_maj} from \"./Keyboard_JS.js\";\nvar change_scale=0;\nvar array_app=[];\nvar ciao=true;\n$(document).ready(function() {$('#tonalità').prop('disabled', true);\n});\n\nexport function findKey(c,vec1,vec2){\n  for (var i=0; i<circle.length; i++){\n    if(circle[i].includes(c))\n    vec1[i]++;\n  }\n  var vec_max = Math.max.apply(Math,vec1);\n  console.log(\"vec_max \",vec_max);\n  if(vec2.length==4){\n\n    var indexes = [], j = -1;\n    var key_found = [];\n\n    while ((j = vec1.indexOf(vec_max, j+1)) != -1){ //va a cercare nel vettore counter tutte le occorrenze dei valori massimi\n        indexes.push(j);\n    }\n\n    //console.log(\"indici\",indexes);\n    for(var k=0; k<indexes.length; k++){\n      var index= indexes[k];\n      key_found.push(key_[index]);    //ci potrebbero essere molteplici tonalità\n}\n\nfind_degrees(stato,indexes);\n$('#tonalità').prop('disabled', true);\n\nif(indexes.length>1){\n  flag=true;\n  //alert(\"Trovata più di una tonalità! Premere sul tasto per visualizzare i diversi percorsi\");\n  count= degree.length/indexes.length;\n  split_array();\n\n  return key_found;\n\n}\nshow_progression(degree,degree[0]);\nreturn key_found;\n}\n\n}\n\n\nfunction find_degrees(state, indexes){\n for (var i=0; i<indexes.length; i++){\n   for(var j=0; j<state.xy.length; j++){\n     if(indexes[i]==state.xy[j][1]){\n       degree.push(state.xy[j][0]);\n     }\n   }\n }\n console.log(\"modi\",degree);\n}\n\n\nfunction split_array(){\n\nif(end<degree.length){\n  $('#tonalità').prop('disabled', true);\n  end=end+count;\n  var shallow= degree.slice(i,end);\n  i=i+count;\n  show_progression(shallow,shallow[0]);\n}\nelse{\n  i=0;\n  end=0;\n}\n\n}\n\n\n$(document).ready(function() {\n\n  $(\"#tonalità\").click(function () {\n\n    for(var i=0; i<scale_maj[change_scale].length;i++){\n            array_app=scale_maj[change_scale][i];\n           $(\"#\"+array_app).css(\"visibility\", \"hidden\");\n           array_app=[];\n      }\n\n      if(change_scale===scale_maj.length-1){\n\n        change_scale=0;\n        array_app=[];\n        change_progression();\n        split_array();\n}else{\n  change_scale++;\n  array_app=[];\n\n}\n    //    if(ciao===true){\n      for(var i=0; i<scale_maj[change_scale].length;i++){\n          array_app=scale_maj[change_scale][i];\n             $(\"#\"+array_app).css(\"visibility\", \"visible\");\n             array_app=[];\n        }\n//}\n\n  change_progression();\n  split_array();\n\n});\n\n});\n\n\nexport function cancel_degrees(){\n  cancel_stato();\n  degree=[];\n  for(var i=0; i<scale_maj[change_scale].length;i++){\n          array_app=scale_maj[change_scale][i];\n         $(\"#\"+array_app).css(\"visibility\", \"hidden\");\n\n    }\n    array_app=[];\n\n\n}\n","import {degree,cancel_degrees,flag,check_key} from \"./circleFifth.js\";\r\n\r\nexport var canvas=document.querySelector(\"#canvas2\");\r\nexport var ctx = canvas.getContext(\"2d\");\r\n\r\nvar stepx = canvas.width/2;\r\nvar stepy = canvas.height/7;\r\n//1-3-5-7-9-11-13\r\nexport var y0=0;\r\nvar x0 = stepx;\r\nexport var xf,yf;\r\nvar t=0;\r\nvar angle= Math.PI/3;\r\nvar g= 9.8;\r\nexport var difference= [];\r\nexport var velocity=[];\r\nexport var invert_sign= [];\r\nexport var k=0;\r\nvar radius=10;\r\n\r\nvar ciao=true;\r\n/*ctx.beginPath();\r\nctx.rect(stepx-70/2, 0, 70, stepy);\r\nctx.fillStyle = \"#E53935\";\r\nctx.fill();\r\n\r\nctx.beginPath();\r\nctx.rect(stepx-70/2, stepy,70, stepy);\r\nctx.fillStyle = \"#FFA726\";\r\nctx.fill();\r\n\r\nctx.beginPath();\r\nctx.rect(stepx-70/2, stepy*2,70, stepy);\r\nctx.fillStyle = \"#FFEB3B\";\r\nctx.fill();\r\n\r\nctx.beginPath();\r\nctx.rect(stepx-70/2, stepy*3,70, stepy);\r\nctx.fillStyle = \"#7CB342\";\r\nctx.fill();\r\n\r\nctx.beginPath();\r\nctx.rect(stepx-70/2, stepy*4,70, stepy);\r\nctx.fillStyle = \"#00796B\";\r\nctx.fill();\r\n\r\nctx.beginPath();\r\nctx.rect(stepx-70/2, stepy*5,70, stepy);\r\nctx.fillStyle = \"#0277BD\";\r\nctx.fill();\r\n\r\nctx.beginPath();\r\nctx.rect(stepx-70/2, stepy*6,70, stepy);\r\nctx.fillStyle = \"#0D47A1\";\r\nctx.fill();\r\n*/        //OLD VERSION\r\n\r\n/*function drawBorder(xPos, yPos, width, height, thickness)\r\n{\r\n   ctx.beginPath();\r\n\r\n  ctx.fillStyle='#FF4500';\r\n  ctx.fillRect(xPos - (thickness), yPos - (thickness), width + (thickness * 2), height + (thickness * 2));\r\n}*/   //FUNZIONE TROVATA SU STACKOVERFLOW CHE DISEGNAVA DEI BORDI PER I RECT CHE FORMAVANO LA LINEA\r\n\r\nfunction show_square(Ypos){\r\n if(Ypos>=0 && Ypos<stepy) {\r\n   ctx.globalAlpha = 0.6;\r\n   ctx.beginPath();\r\n   ctx.rect(stepx-70/2, 0, 70, stepy);\r\n   ctx.fillStyle = \"#E53935\";\r\n   ctx.fill();\r\n   ctx.font = \"20px Arial\";\r\n   ctx.fillText(\"IV - Lydian\", 10, stepy/2);\r\n}\r\n if(Ypos>=stepy && Ypos<stepy*2) {\r\n   ctx.globalAlpha = 0.6;\r\n   ctx.beginPath();\r\n   ctx.rect(stepx-70/2, stepy,70, stepy);\r\n   ctx.fillStyle = \"#FFA726\";\r\n   ctx.fill();\r\n   ctx.font = \"20px Arial\";\r\n   ctx.fillText(\"I - Ionian\", 10, 3*stepy/2);\r\n                                 }\r\n if(Ypos>=stepy*2 && Ypos<stepy*3) {\r\n   ctx.globalAlpha = 0.6;\r\n   ctx.beginPath();\r\n   ctx.rect(stepx-70/2, stepy*2,70, stepy);\r\n   ctx.fillStyle = \"#FFEB3B\";\r\n   ctx.fill();\r\n   ctx.font = \"16px Arial\";\r\n   ctx.fillText(\"V - Misolydian\", 10, 5*stepy/2);\r\n }\r\n if(Ypos>=stepy*3 && Ypos<stepy*4) {\r\n   ctx.globalAlpha = 0.6;\r\n   ctx.beginPath();\r\n   ctx.rect(stepx-70/2, stepy*3,70, stepy);\r\n   ctx.fillStyle = \"#7CB342\";\r\n   ctx.fill();\r\n   ctx.font = \"20px Arial\";\r\n   ctx.fillText(\"II - Doric\", 10, 7*stepy/2);\r\n }\r\n if(Ypos>=stepy*4 && Ypos<stepy*5) {\r\n   ctx.globalAlpha = 0.6;\r\n   ctx.beginPath();\r\n   ctx.rect(stepx-70/2, stepy*4,70, stepy);\r\n   ctx.fillStyle = \"#00796B\";\r\n   ctx.fill();\r\n   ctx.font = \"20px Arial\";\r\n   ctx.fillText(\"VI - Aeolian\", 10, 9*stepy/2);\r\n}\r\n if(Ypos>=stepy*5 && Ypos<stepy*6) {\r\n   ctx.globalAlpha = 0.6;\r\n   ctx.beginPath();\r\n   ctx.rect(stepx-70/2, stepy*5,70, stepy);\r\n   ctx.fillStyle = \"#0277BD\";\r\n   ctx.fill();\r\n   ctx.font = \"18px Arial\";\r\n   ctx.fillText(\"III - Phrygian\", 10, 11*stepy/2);\r\n }\r\n if(Ypos>=stepy*6 && Ypos<canvas.height) {\r\n   ctx.globalAlpha = 0.6;\r\n   ctx.beginPath();\r\n   ctx.rect(stepx-70/2, stepy*6,70, stepy);\r\n   ctx.fillStyle = \"#0D47A1\";\r\n   ctx.fill();\r\n   ctx.font = \"18px Arial\";\r\n   ctx.fillText(\"VII - Locrian\", 10, 13*stepy/2);\r\n }\r\n} //FUNZIONE CHE COMANDA L'APPARIZIONE DI UN QUADRATO IN BASE ALLA POSIZIONE RAGGIUNTA DALLA LINEA\r\n\r\nfunction choose_color(Ypos){\r\n var color;\r\n if(Ypos>=0 && Ypos<stepy) color='#E53935';\r\n if(Ypos>=stepy && Ypos<stepy*2) color='#FFA726';\r\n if(Ypos>=stepy*2 && Ypos<stepy*3) color='#FFEB3B';\r\n if(Ypos>=stepy*3 && Ypos<stepy*4) color='#7CB342';\r\n if(Ypos>=stepy*4 && Ypos<stepy*5) color='#00796B';\r\n if(Ypos>=stepy*5 && Ypos<stepy*6) color='#0277BD';\r\n if(Ypos>=stepy*6 && Ypos<canvas.height) color='#0D47A1';\r\nreturn color;\r\n} //FUNZIONE CHE COMANDA IL CAMBIO DI COLORE DELLA LINEA IN BASE ALLA SUA POSIZIONE\r\n\r\nfunction choose_position(value){\r\n    switch(value){\r\n        case 0:\r\n        y0=stepy/2;\r\n        ctx.globalAlpha = 0.6;\r\n        ctx.beginPath();\r\n        ctx.arc(stepx, y0, radius, 0, 2 * Math.PI);\r\n        ctx.lineWidth=5;\r\n        ctx.strokeStyle='magenta';\r\n        ctx.stroke();\r\n        ctx.rect(stepx-70/2, 0, 70, stepy);\r\n        ctx.fillStyle = \"#E53935\";\r\n        ctx.fill();\r\n        ctx.font = \"20px Arial\";\r\n        ctx.fillText(\"IV - Lydian\", 10, stepy/2);\r\n        break;\r\n\r\n        case 1:\r\n        y0=3*stepy/2;\r\n        ctx.globalAlpha = 0.6;\r\n        ctx.beginPath();\r\n        ctx.arc(stepx, y0, radius, 0, 2 * Math.PI);\r\n        ctx.lineWidth=5;\r\n        ctx.strokeStyle='magenta';\r\n        ctx.stroke();\r\n        ctx.rect(stepx-70/2, stepy, 70, stepy);\r\n        ctx.fillStyle = \"#FFA726\";\r\n        ctx.fill();\r\n        ctx.font = \"20px Arial\";\r\n        ctx.fillText(\"I - Ionian\", 10, 3*stepy/2);\r\n        break;\r\n\r\n        case 2:\r\n        y0=5*stepy/2;\r\n        ctx.globalAlpha = 0.6;\r\n        ctx.beginPath();\r\n        ctx.arc(stepx, y0, radius, 0, 2 * Math.PI);\r\n        ctx.lineWidth=5;\r\n        ctx.strokeStyle='magenta';\r\n        ctx.stroke();\r\n        ctx.rect(stepx-70/2, stepy*2, 70, stepy);\r\n        ctx.fillStyle = \"#FFEB3B\";\r\n        ctx.fill();\r\n        ctx.font = \"16px Arial\";\r\n        ctx.fillText(\"V - Misolydian\", 10, 5*stepy/2);\r\n        break;\r\n\r\n        case 3:\r\n        y0=7*stepy/2;\r\n        ctx.globalAlpha = 0.6;\r\n        ctx.beginPath();\r\n        ctx.arc(stepx, y0, radius, 0, 2 * Math.PI);\r\n        ctx.lineWidth=5;\r\n        ctx.strokeStyle='magenta';\r\n        ctx.stroke();\r\n        ctx.rect(stepx-70/2, stepy*3, 70, stepy);\r\n        ctx.fillStyle = \"#7CB342\";\r\n        ctx.fill();\r\n        ctx.font = \"20px Arial\";\r\n        ctx.fillText(\"II - Doric\", 10, 7*stepy/2);\r\n        break;\r\n\r\n        case 4:\r\n        y0=9*stepy/2;\r\n        ctx.globalAlpha = 0.6;\r\n        ctx.beginPath();\r\n        ctx.arc(stepx, y0, radius, 0, 2 * Math.PI);\r\n        ctx.lineWidth=5;\r\n        ctx.strokeStyle='magenta';\r\n        ctx.stroke();\r\n        ctx.rect(stepx-70/2, stepy*4, 70, stepy);\r\n        ctx.fillStyle = \"#00796B\";\r\n        ctx.fill();\r\n        ctx.font = \"20px Arial\";\r\n        ctx.fillText(\"VI - Aeolian\", 10, 9*stepy/2);\r\n        console.log('dovrei aver disegnato il quadrato a ', stepx,stepy, y0);\r\n        break;\r\n\r\n        case 5:\r\n        y0=11*stepy/2;\r\n        ctx.globalAlpha = 0.6;\r\n        ctx.beginPath();\r\n        ctx.arc(stepx, y0, radius, 0, 2 * Math.PI);\r\n        ctx.lineWidth=5;\r\n        ctx.strokeStyle='magenta';\r\n        ctx.stroke();\r\n        ctx.rect(stepx-70/2, stepy*5, 70, stepy);\r\n        ctx.fillStyle = \"#0277BD\";\r\n        ctx.fill();\r\n        ctx.font = \"18px Arial\";\r\n        ctx.fillText(\"III - Phrygian\", 10, 11*stepy/2);\r\n        break;\r\n\r\n\t\t    case 6:\r\n        y0=13*stepy/2;\r\n        ctx.globalAlpha = 0.6;\r\n        ctx.beginPath();\r\n        ctx.arc(stepx, y0, radius, 0, 2 * Math.PI);\r\n        ctx.lineWidth=5;\r\n        ctx.strokeStyle='magenta';\r\n        ctx.stroke();\r\n        ctx.rect(stepx-70/2, stepy*6, 70, stepy);\r\n        ctx.fillStyle = \"#0D47A1\";\r\n        ctx.fill();\r\n        ctx.font = \"18px Arial\";\r\n        ctx.fillText(\"VII - Locrian\", 10, 13*stepy/2);\r\n        break;\r\n\r\n\t\t}\r\n} //QUESTA FUNZIONE NON SOLO DECIDE IL PUNTO INIZIALE DA CUI FAR PARTIRE LA LINEA, MA DECIDE ANCHE QUALE QUADRATO FARE APPARIRE PER PRIMO\r\n\r\nfunction choose_velocity(degree){\r\nfor(var i=0;i<degree.length-1;i++){\r\n\r\n difference.push(Math.abs(degree[i+1]-degree[i]));\r\n if(degree[i+1]-degree[i]>=0){\r\n  invert_sign[i]=false;\r\n }\r\n else{\r\n  invert_sign[i]=true;\r\n }\r\n// console.log(difference)\r\n\r\n}\r\nfor(var j=0; j<difference.length; j++){\r\n  if(difference[j]===0){velocity[j]=0;}\r\n if(difference[j]===1){velocity[j]=25;}\r\n if(difference[j]===2){velocity[j]=36;}\r\n if(difference[j]===3){velocity[j]=44;}\r\n if(difference[j]===4){velocity[j]=51;}\r\n if(difference[j]===5){velocity[j]=57;}\r\n if(difference[j]===6){velocity[j]=62;}\r\n\r\n }\r\n\r\n} //FUNZIONE CHE GESTISCE IL CAMBIO DI VELOCITA' IN BASE AL MODO, INFATTI LE DISTANZE VENGONO RAGGIUNTE IN BASE ALLE VELOCITA' INIZIALI CHE SONO STATE MAPPATE IN BASE ALLE DIMENSIONI DEL CANVAS\r\n\r\nfunction render_prog(time,value,sign){ //FUNZIONE CHE REGOLA IL MOTO PARABOLICO DELLE LINEE\r\n\r\n if(sign==true){  //DAL BASSO VERSO L'ALTO\r\n  yf= y0 - velocity[k]*Math.cos(angle)*time;\r\n  xf= ((-1/2)*g*(Math.pow(time, 2))) + (velocity[k]*Math.sin(angle)*time) +x0;\r\n}\r\n else{  //DALL'ALTO VERSO IL BASSO\r\n  yf= y0 + velocity[k]*Math.cos(angle)*time;\r\n  xf= ((-1/2)*g*(Math.pow(time, 2))) + (velocity[k]*Math.sin(angle)*time) +x0;\r\n }\r\n\r\n //drawBorder(xf, yf, 1, 1,1);\r\nctx.beginPath();                    //VENGONO DISEGNATI TANTI QUADRATI PICCOLI PER FORMARE LA LINEA\r\nctx.rect(xf,yf,3,3);\r\nctx.fillStyle= choose_color(y0);\r\nctx.fill();\r\n\r\nctx.lineWidth = 0.2;              //DISEGNA I BORDI DEI QUADRATINI(RENDE LE LINEE PIù LUMINOSE)\r\nctx.strokeStyle= 'white';\r\nctx.stroke();\r\n\r\nvar tg=(2*velocity[k]*Math.sin(angle))/g;  //TEMPO CHE OGNI LINEA IMPIEGA PER RAGGIUNGERE IL PUNTO D'ARRIVO\r\nconsole.log(\"cappa\",k);\r\n if(time>tg){                             //CONTROLLO CHE FERMA LA LINEA AL PUNTO FINALE E AGGIORNA IL NUOVO PUNTO INIZIALE CON QUELLO FINALE PRECEDENTE\r\n    k=k+1;\r\n    clearInterval(value);\r\n    t=0;\r\n    y0=yf;\r\n    ctx.fillStyle= choose_color(y0);\r\n    show_square(y0);\r\n  if(k<invert_sign.length){             //CONTROLLO CHE PER FORTUNA PUO' ESSERE USATO PER DIRE CHE DEVE ESSERE INIZIALE UN NUOVO PERCORSO\r\n    var clear = setInterval(function(){\r\n  render_prog(t+=0.03, clear,invert_sign[k]);\r\n},0.2);\r\n  }\r\n   else{\r\n     if(flag===true){\r\n     $('#tonalità').prop('disabled', false);\r\n   }      //SI ESCE DALLA FUNZIONE E QUINDI IL PERCORSO E' FINITO.\r\n    return;\r\n   }\r\n  }\r\n}\r\n\r\n\r\nexport function show_progression(degree_arr,value){       //FUNZIONE CHE FA COMINCIARE IL TUTTO\r\n\r\n  ctx.clearRect(0,0,canvas.width,canvas.height);\r\n  choose_position(value);             //VIENE SETTATA LA POSIZIONE INIZIALE\r\n  choose_velocity(degree_arr);                //VENGONO SETTATE LE VELOCITA'\r\n  var clear= setInterval(function(){              //TRIGGER INIZIALE DELLA FUNZIONE RENDER\r\n    render_prog(t+=0.03, clear,invert_sign[k]);\r\n  },0.2);\r\n\r\n}\r\n\r\nexport function reset_canvas2(){              //FUNZIONE CHE RESETTA IL TUTTO PER RINIZIARE TUTTO DA CAPO\r\n\r\n  difference=[];\r\n  velocity=[];\r\n  invert_sign=[];\r\n  k=0;\r\n  y0=0;\r\n  xf=0;\r\n  yf=0;\r\n  $('#tonalità').prop('disabled', true);\r\n\r\n  cancel_degrees();                         //FUNZIONE IMPORTATA PERCHE' NON POSSONO ESSERE SVUOTATI VETTORI IMPORTATI DA ALTRI MODULI, QUINDI QUESTO VIENE FATTO NEL MODULO DI APPARTENENZA (VEDERE GLI IMPORT/EXPORT)\r\n}\r\n\r\nexport function change_progression(){\r\n\r\n  difference=[];\r\n  velocity=[];\r\n  invert_sign=[];\r\n  k=0;\r\n  y0=0;\r\n  xf=0;\r\n  yf=0;\r\n}\r\n"]}